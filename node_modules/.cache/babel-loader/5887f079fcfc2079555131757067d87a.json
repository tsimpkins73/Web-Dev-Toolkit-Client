{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\t73de\\\\Desktop\\\\the console\\\\src\\\\ArticleView.js\";\nimport ArticleService from './services/article-service';\nimport React from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport CommentsList from './CommentsList.js';\nimport AddCommentView from './AddCommentView.js';\nimport './css/ArticleView.css';\nimport { API_BASE_URL } from './config';\nexport default class ArticleView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addComment = comment => {\n      const articleComments = [...this.state.articleComments, comment];\n      this.setState({\n        articleComments\n      });\n      const getCommentList = document.getElementById(\"articleComments\");\n      getCommentList.scrollIntoView({\n        block: \"end\"\n      });\n    };\n\n    this.getComments = article_id => {\n      fetch(\"\".concat(API_BASE_URL, \"/comments/\").concat(article_id)).then(response => response.json()).then(articleComments => {\n        this.setState({\n          articleComments\n        });\n      });\n    };\n\n    this.removeCommentFromState = commentId => {\n      let articleComments = this.state.articleComments.filter(articleComment => articleComment.id === commentId);\n      this.setState({\n        articleComments\n      });\n    };\n\n    this.deleteComment = commentId => {\n      ArticleService.deleteComment(commentId).then(this.removeCommentFromState(commentId)).catch(this.context.setError);\n    };\n\n    this.state = {\n      articleComments: []\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.article.id) {\n      this.getComments(this.props.article.id);\n    } else {\n      this.setState({\n        articleComments: []\n      });\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.article.id !== this.props.article.id) {\n      this.getComments(this.props.article.id);\n    } else {\n      this.setState({\n        articleComments: []\n      });\n    }\n  }\n\n  render() {\n    const user = this.props.user;\n    return React.createElement(\"div\", {\n      id: \"article-full-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      id: \"article-Full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"articleImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"previewImage\",\n      src: this.props.article.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"articleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      id: \"articleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.props.article.headline), React.createElement(\"p\", {\n      id: \"articleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.props.article.text)), React.createElement(\"div\", {\n      id: \"articleButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.props.handleFavoriteButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Favorite\"), React.createElement(Link, {\n      to: \"/dashboard/article/\" + this.props.article.id + \"/comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Add Comment\"))), React.createElement(Route, {\n      exact: true,\n      path: \"/dashboard/article/\".concat(this.props.article.id, \"/comment\"),\n      render: () => React.createElement(AddCommentView, {\n        addComment: this.addComment,\n        article: this.props.article,\n        articleId: this.props.article.id,\n        getComments: this.getComments,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(CommentsList, {\n      articleId: this.props.articleId,\n      users: this.props.users,\n      articleComments: this.state.articleComments,\n      currentUser: this.props.currentUser,\n      deleteComment: this.deleteComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/t73de/Desktop/the console/src/ArticleView.js"],"names":["ArticleService","React","Link","Route","CommentsList","AddCommentView","API_BASE_URL","ArticleView","Component","constructor","props","addComment","comment","articleComments","state","setState","getCommentList","document","getElementById","scrollIntoView","block","getComments","article_id","fetch","then","response","json","removeCommentFromState","commentId","filter","articleComment","id","deleteComment","catch","context","setError","componentDidMount","article","componentWillReceiveProps","newProps","render","user","image","headline","text","handleFavoriteButton","articleId","users","currentUser"],"mappings":"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","sourcesContent":["import ArticleService from './services/article-service';\r\nimport React from 'react'\r\nimport { Link, Route } from 'react-router-dom';\r\nimport CommentsList from './CommentsList.js'\r\nimport AddCommentView from './AddCommentView.js'\r\nimport './css/ArticleView.css'\r\nimport { API_BASE_URL } from './config'\r\n\r\nexport default class ArticleView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            articleComments: []\r\n        };\r\n    }\r\n\r\n    addComment = comment => {\r\n        const articleComments = [\r\n            ...this.state.articleComments,\r\n            comment\r\n        ]\r\n        this.setState({ articleComments })\r\n        const getCommentList = document.getElementById(\"articleComments\");\r\n        getCommentList.scrollIntoView({ block: \"end\" });\r\n    }\r\n\r\n    getComments = (article_id) => {\r\n        fetch(`${API_BASE_URL}/comments/${article_id}`)\r\n            .then(response => response.json())\r\n            .then((articleComments) => { this.setState({ articleComments }); });\r\n    }\r\n\r\n    removeCommentFromState = (commentId) => {\r\n        let articleComments = this.state.articleComments.filter(articleComment => articleComment.id === commentId)\r\n        this.setState({ articleComments })\r\n    }\r\n\r\n    deleteComment = (commentId) => {\r\n        ArticleService.deleteComment(commentId)\r\n            .then(this.removeCommentFromState(commentId))\r\n            .catch(this.context.setError)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.article.id) {\r\n\r\n            this.getComments(this.props.article.id);\r\n        }\r\n        else {\r\n            this.setState({ articleComments: [] })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.article.id !== this.props.article.id) {\r\n            this.getComments(this.props.article.id);\r\n        }\r\n       \r\n        else {\r\n            this.setState({ articleComments: [] })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.user;\r\n        return (\r\n            <div id=\"article-full-container\" >\r\n                <section id=\"article-Full\">\r\n                    <div id=\"articleImage\"><img id=\"previewImage\" src={this.props.article.image} /></div>\r\n                    <div id=\"articleText\">\r\n                        <h3 id=\"articleText\">{this.props.article.headline}</h3>\r\n                        <p id=\"articleText\">{this.props.article.text}</p>\r\n                    </div>\r\n                    <div id=\"articleButtons\">\r\n                        <button onClick={this.props.handleFavoriteButton}>Favorite</button>\r\n                        <Link to={\"/dashboard/article/\" + this.props.article.id + \"/comment\"}><button>Add Comment</button></Link>\r\n                    </div>\r\n                    <Route exact path={`/dashboard/article/${this.props.article.id}/comment`} render={() => <AddCommentView addComment={this.addComment} article={this.props.article} articleId={this.props.article.id} getComments={this.getComments} user={user} />  } />\r\n                    <CommentsList  articleId={this.props.articleId} users={this.props.users} articleComments={this.state.articleComments} currentUser={this.props.currentUser} deleteComment={this.deleteComment} />\r\n                </section>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}