{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\GRAPHICS\\\\Desktop\\\\Web-Dev-Toolkit\\\\Web-Dev-Toolkit-Client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\GRAPHICS\\\\Desktop\\\\Web-Dev-Toolkit\\\\Web-Dev-Toolkit-Client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\GRAPHICS\\\\Desktop\\\\Web-Dev-Toolkit\\\\Web-Dev-Toolkit-Client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\GRAPHICS\\\\Desktop\\\\Web-Dev-Toolkit\\\\Web-Dev-Toolkit-Client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\GRAPHICS\\\\Desktop\\\\Web-Dev-Toolkit\\\\Web-Dev-Toolkit-Client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import'./css/ResourceTypeView.css';import ResourceTypeView from\"./ResourceTypeView.js\";import{Link}from'react-router-dom';import{API_BASE_URL}from'./config';var ResourceTypePreview=/*#__PURE__*/function(_React$Component){_inherits(ResourceTypePreview,_React$Component);function ResourceTypePreview(props,context){var _this;_classCallCheck(this,ResourceTypePreview);_this=_possibleConstructorReturn(this,_getPrototypeOf(ResourceTypePreview).call(this,props,context));_this.getResourcesForTypes=function(typeID){fetch(\"\".concat(API_BASE_URL,\"/resources/byType/\").concat(typeID)).then(function(response){return response.json();}).then(function(typeResources){_this.setState({typeResources:typeResources});});};_this.state={typeResources:[],resourceType:''};return _this;}_createClass(ResourceTypePreview,[{key:\"componentDidMount\",value:function componentDidMount(){var resourceType=this.props.resourceType;if(this.props.favoriteResources){this.setState({typeResources:this.props.favoriteResources,resourceType:\"Favorites\"});}if(this.props.randomResources){this.setState({typeResources:this.props.randomResources,resourceType:\"Random\"});}if(this.props.searchTerm){this.setState({typeResources:this.props.searchResources,resourceType:\"Results\"});}else{this.getResourcesForTypes(resourceType.id);this.setState({resourceType:this.props.resourceType.name});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){/*        this.props.clearSpecialResources(); */}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(newProps){if(newProps.favoriteResources){this.setState({typeResources:this.props.favoriteResources});}else if(newProps.searchResources){if(newProps.searchResources!==this.state.typeResources){this.setState({typeResources:newProps.searchResources});}else{this.setState({typeResources:this.props.searchResources});}}else if(newProps.randomResources){if(newProps.randomResources!==this.state.typeResources){this.setState({typeResources:newProps.randomResources});}this.setState({typeResources:this.props.randomResources,resourceType:\"Favorites\"});}else if(newProps.resourceType!==this.props.resourceType){this.getResourcesForTypes(newProps.resourceType.id);}else if(this.props.resourceType){this.getResourcesForTypes(this.props.resourceType.id);}else{this.setState({typeResources:[]});}}},{key:\"render\",value:function render(props){var resourceType=this.state.resourceType;var typeResources=this.state.typeResources;return React.createElement(\"section\",{id:\"resource-full-container\"},React.createElement(\"h1\",{class:\"resource-section-headline\"},resourceType),React.createElement(\"section\",{id:\"resource-component-container\"},typeResources.map(function(resource){var _this2=this;return React.createElement(ResourceTypeView,{resource:resource,resourceType:resourceType,handleFavoriteButton:function handleFavoriteButton(){return _this2.props.handleFavoriteButton(resource);}});})));}}]);return ResourceTypePreview;}(React.Component);export{ResourceTypePreview as default};","map":{"version":3,"sources":["C:/Users/GRAPHICS/Desktop/Web-Dev-Toolkit/Web-Dev-Toolkit-Client/src/ResourceTypePage.js"],"names":["React","ResourceTypeView","Link","API_BASE_URL","ResourceTypePreview","props","context","getResourcesForTypes","typeID","fetch","then","response","json","typeResources","setState","state","resourceType","favoriteResources","randomResources","searchTerm","searchResources","id","name","newProps","map","resource","handleFavoriteButton","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './css/ResourceTypeView.css'\r\nimport ResourceTypeView from \"./ResourceTypeView.js\";\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './config'\r\n\r\nexport default class ResourceTypePreview extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            typeResources: [],\r\n            resourceType:''\r\n        };\r\n    }\r\n\r\n\r\n    getResourcesForTypes = (typeID) => {\r\n        fetch(`${API_BASE_URL}/resources/byType/${typeID}`)\r\n            .then(response => response.json())\r\n            .then((typeResources) => { this.setState({ typeResources }); });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let resourceType = this.props.resourceType;\r\n        if (this.props.favoriteResources) {\r\n            this.setState({ typeResources: this.props.favoriteResources,\r\n            resourceType:\"Favorites\" })\r\n        }\r\n        if (this.props.randomResources) {\r\n            this.setState({ typeResources: this.props.randomResources,\r\n            resourceType:\"Random\" })\r\n        }\r\n        if (this.props.searchTerm) {\r\n            this.setState({ typeResources: this.props.searchResources,\r\n            resourceType:\"Results\"})\r\n        }\r\n        else {\r\n            this.getResourcesForTypes(resourceType.id);\r\n            this.setState({ resourceType: this.props.resourceType.name })\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n /*        this.props.clearSpecialResources(); */\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n       \r\n        if(newProps.favoriteResources){\r\n            this.setState({ typeResources: this.props.favoriteResources })\r\n        }else if(newProps.searchResources) {\r\n            if(newProps.searchResources !== this.state.typeResources) {\r\n                this.setState({ typeResources: newProps.searchResources })\r\n            }\r\n            else{\r\n            this.setState({ typeResources: this.props.searchResources })\r\n        }\r\n    }else if (newProps.randomResources) {\r\n        if(newProps.randomResources !== this.state.typeResources) {\r\n            this.setState({ typeResources: newProps.randomResources })\r\n        }\r\n        this.setState({ typeResources: this.props.randomResources,\r\n        resourceType:\"Favorites\" })\r\n    }\r\n        else if(newProps.resourceType !== this.props.resourceType){\r\n            this.getResourcesForTypes(newProps.resourceType.id);\r\n        }else if(this.props.resourceType){\r\n            this.getResourcesForTypes(this.props.resourceType.id);\r\n        }\r\n        else{\r\n            this.setState({ typeResources: []})\r\n        }\r\n\r\n    }\r\n\r\n    render(props) {\r\n        let resourceType = this.state.resourceType;\r\n        let typeResources = this.state.typeResources;\r\n        return (\r\n            <section id=\"resource-full-container\">\r\n                <h1 class=\"resource-section-headline\">{resourceType}</h1>\r\n                <section id=\"resource-component-container\">\r\n                    {typeResources.map(function (resource) {\r\n                        return <ResourceTypeView resource={resource}  resourceType={resourceType} handleFavoriteButton={() => this.props.handleFavoriteButton(resource)} />;\r\n                    })}\r\n                </section>\r\n            </section>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}