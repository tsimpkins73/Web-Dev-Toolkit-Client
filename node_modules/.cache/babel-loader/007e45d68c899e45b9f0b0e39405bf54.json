{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\t73de\\\\Desktop\\\\Web-Dev-Toolkit-Client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport LandingPage from './LandingPage.js';\nimport LoginForm from './LoginForm.js';\nimport SignUpForm from './SignUpForm.js';\nimport Dashboard from './Dashboard.js';\nimport { API_BASE_URL } from './config';\n\nrequire('dotenv').config();\n\nexport default class App extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleFavoriteButton = article => {\n      article.favorite = !article.favorite;\n      this.setState({\n        articles: this.state.articles\n      });\n    };\n\n    this.handleSearchForm = event => {\n      event.preventDefault();\n      const term = event.currentTarget.searchTerm.value;\n      this.setState({\n        searchterm: term\n      });\n    };\n\n    this.clearUser = () => {\n      this.setState({\n        currentUser: {}\n      });\n      localStorage[\"user\"] = 'null';\n    };\n\n    this.onLoginSuccess = username => {\n      fetch(\"\".concat(API_BASE_URL, \"/users/\").concat(username)).then(response => response.json()).then(currentUser => {\n        this.setState({\n          currentUser\n        });\n        localStorage[\"user\"] = JSON.stringify(currentUser);\n      });\n    };\n\n    this.state = {\n      resources: [],\n      types: [],\n      resourcesForTypes: [],\n      typeResources: [],\n      searchterm: '',\n      searchResources: [],\n      currentUser: {},\n      users: []\n    };\n  }\n  /* APP STATE ADJUSTING FUNCTIONS */\n\n  /* These functions are all button handlers */\n\n\n  /* These functions are to retrieve data from the API and fill the state */\n  getResources() {\n    fetch(\"\".concat(API_BASE_URL, \"/resources\")).then(response => response.json()).then(resources => {\n      this.setState({\n        resources\n      });\n    });\n  }\n\n  getTypes() {\n    fetch(\"\".concat(API_BASE_URL, \"/types\")).then(response => response.json()).then(types => {\n      this.setState({\n        types\n      });\n    });\n  }\n\n  getUsers() {\n    fetch(\"\".concat(API_BASE_URL, \"/users\")).then(response => response.json()).then(users => {\n      this.setState({\n        users\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getResources();\n    this.getTypes();\n    this.getUsers();\n\n    if (localStorage[\"user\"]) {\n      const user = JSON.parse(localStorage[\"user\"]);\n      this.setState({\n        currentUser: user\n      });\n    }\n  }\n\n  render() {\n    let types = this.state.types;\n    return React.createElement(\"main\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: '/',\n      render: props => React.createElement(LandingPage, Object.assign({}, props, {\n        resources: this.state.resources,\n        types: types,\n        handleFavoriteButton: this.handleFavoriteButton,\n        clearUser: this.clearUser,\n        currentresource: this.state.currentArticle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: '/login',\n      render: props => React.createElement(LoginForm, Object.assign({\n        onLoginSuccess: this.onLoginSuccess\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: '/sign-up',\n      component: SignUpForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: '/dashboard',\n      render: props => React.createElement(Dashboard, Object.assign({}, props, {\n        handleArticleButton: this.handleArticleButton,\n        users: this.state.users,\n        resources: this.state.resources,\n        types: types,\n        searchterm: this.state.searchterm,\n        currentUser: this.state.currentUser,\n        types: this.state.types,\n        handleSearchForm: this.handleSearchForm,\n        handleFavoriteButton: this.handleFavoriteButton,\n        clearUser: this.clearUser,\n        currentresource: this.state.currentArticle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/t73de/Desktop/Web-Dev-Toolkit-Client/src/App.js"],"names":["React","BrowserRouter","Route","LandingPage","LoginForm","SignUpForm","Dashboard","API_BASE_URL","require","config","App","Component","constructor","props","context","handleFavoriteButton","article","favorite","setState","articles","state","handleSearchForm","event","preventDefault","term","currentTarget","searchTerm","value","searchterm","clearUser","currentUser","localStorage","onLoginSuccess","username","fetch","then","response","json","JSON","stringify","resources","types","resourcesForTypes","typeResources","searchResources","users","getResources","getTypes","getUsers","componentDidMount","user","parse","render","currentArticle","handleArticleButton"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport LandingPage from './LandingPage.js'\r\nimport LoginForm from './LoginForm.js'\r\nimport SignUpForm from './SignUpForm.js'\r\nimport Dashboard from './Dashboard.js'\r\nimport { API_BASE_URL } from './config'\r\nrequire('dotenv').config();\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      resources: [],\r\n      types: [],\r\n      resourcesForTypes: [],\r\n      typeResources: [],\r\n      searchterm: '',\r\n      searchResources: [],\r\n      currentUser: {},\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  /* APP STATE ADJUSTING FUNCTIONS */\r\n\r\n  /* These functions are all button handlers */\r\n\r\n  handleFavoriteButton = (article) => {\r\n    article.favorite = !article.favorite;\r\n    this.setState({\r\n      articles: this.state.articles\r\n    });\r\n  }\r\n\r\n  handleSearchForm = (event) => {\r\n    event.preventDefault();\r\n    const term = event.currentTarget.searchTerm.value;\r\n    this.setState({\r\n      searchterm: term\r\n    });\r\n  }\r\n\r\n\r\n/* These functions pertain to logging in and out */\r\n  clearUser = () => {\r\n    this.setState({ currentUser: {} });\r\n    localStorage[\"user\"] = 'null';\r\n  }\r\n\r\n  onLoginSuccess = (username) => {\r\n    fetch(`${API_BASE_URL}/users/${username}`)\r\n      .then(response => response.json())\r\n      .then((currentUser) => {\r\n        this.setState({ currentUser });\r\n        localStorage[\"user\"] = JSON.stringify(currentUser)\r\n      });\r\n  }\r\n\r\n\r\n /* These functions are to retrieve data from the API and fill the state */  \r\n  getResources() {\r\n    fetch(`${API_BASE_URL}/resources`)\r\n      .then(response => response.json())\r\n      .then((resources) => { this.setState({ resources }); });\r\n  }\r\n  getTypes() {\r\n    fetch(`${API_BASE_URL}/types`)\r\n      .then(response => response.json())\r\n      .then((types) => { this.setState({ types }); });\r\n  }\r\n\r\n  getUsers() {\r\n    fetch(`${API_BASE_URL}/users`)\r\n      .then(response => response.json())\r\n      .then((users) => { this.setState({ users }); });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getResources();\r\n    this.getTypes();\r\n    this.getUsers();\r\n    if (localStorage[\"user\"]) {\r\n      const user = JSON.parse(localStorage[\"user\"]);\r\n      this.setState({ currentUser: user });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let types = this.state.types;\r\n    return (\r\n      <main className='App'>\r\n        <BrowserRouter>\r\n          <Route exact path={'/'} render={(props) => <LandingPage {...props} resources={this.state.resources} types={types} handleFavoriteButton={this.handleFavoriteButton} clearUser={this.clearUser} currentresource={this.state.currentArticle} />} />\r\n          <Route path={'/login'} render={(props) => <LoginForm onLoginSuccess={this.onLoginSuccess} {...props} />} />\r\n          <Route path={'/sign-up'} component={SignUpForm} />\r\n          <Route path={'/dashboard'} render={(props) => <Dashboard {...props} handleArticleButton={this.handleArticleButton} users={this.state.users} resources={this.state.resources} types={types} searchterm={this.state.searchterm} currentUser={this.state.currentUser} types={this.state.types} handleSearchForm={this.handleSearchForm} handleFavoriteButton={this.handleFavoriteButton} clearUser={this.clearUser} currentresource={this.state.currentArticle} />} />\r\n        </BrowserRouter>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}