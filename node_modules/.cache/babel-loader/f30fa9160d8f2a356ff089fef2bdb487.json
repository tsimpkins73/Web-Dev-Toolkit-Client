{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\t73de\\\\Desktop\\\\the console\\\\src\\\\CommentView.js\";\nimport React from 'react'; //import './CommentView.css'\n\nexport default class CommentView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setValues = () => {\n      let users = this.props.users;\n\n      if (users) {\n        let user = users.find(user => user.id === this.props.comment.user_id);\n        let userId = this.props.comment.user_id;\n\n        if (this.props.currentUser) {\n          let currentUserId = this.props.currentUser.id;\n          this.setState({\n            user: user\n          });\n          this.setState({\n            userId: userId\n          });\n          this.setState({\n            currentUserId: currentUserId\n          });\n        } else {\n          let currentUserId = {};\n          this.setState({\n            user: user\n          });\n          this.setState({\n            userId: userId\n          });\n          this.setState({\n            currentUserId: currentUserId\n          });\n        }\n      }\n    };\n\n    this.state = {\n      user: {},\n      userId: {},\n      currentUserId: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setValues();\n  }\n\n  componentWillReceiveProps() {\n    this.setValues();\n  }\n\n  render() {\n    let users = this.props.users;\n    let user = users.find(user => user.id === this.props.comment.user_id) || {};\n    let userId = this.state.userId;\n    let currentUserId = this.state.currentUserId;\n    let comment = this.props.comment;\n    let deleteComment = this.props.deleteComment;\n    console.log(user);\n    console.log(userId);\n    console.log(comment);\n    console.log(currentUserId);\n    console.warn(this.props.users);\n\n    if (userId === currentUserId) {\n      return React.createElement(\"div\", {\n        id: \"commentContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"articleComment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"commentContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"commenterName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"commentOwner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, user.name)), React.createElement(\"div\", {\n        className: \"commentText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, comment.text))), React.createElement(\"div\", {\n        className: \"deleteComment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"deleteCommentButton\",\n        onClick: () => {\n          deleteComment(comment.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"X\"))));\n    }\n\n    return React.createElement(\"div\", {\n      id: \"commentContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"articleComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"commentContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"commenterName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"commentOwner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, user.name)), React.createElement(\"div\", {\n      className: \"commentText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, comment.text))), React.createElement(\"div\", {\n      className: \"deleteComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/t73de/Desktop/the console/src/CommentView.js"],"names":["React","CommentView","Component","constructor","props","setValues","users","user","find","id","comment","user_id","userId","currentUser","currentUserId","setState","state","componentDidMount","componentWillReceiveProps","render","deleteComment","console","log","warn","name","text"],"mappings":"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","sourcesContent":["import React from 'react'\r\n//import './CommentView.css'\r\n\r\nexport default class CommentView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {},\r\n            userId: {},\r\n            currentUserId: {}\r\n        };\r\n    }\r\n\r\n    setValues = () => {\r\n\r\n        let users = this.props.users;\r\n        if(users){\r\n        let user = users.find(user => (user.id === this.props.comment.user_id));\r\n        let userId = this.props.comment.user_id\r\n        if(this.props.currentUser){\r\n    let currentUserId = this.props.currentUser.id\r\n        this.setState({ user: user });\r\n        this.setState({ userId: userId });\r\n        this.setState({ currentUserId: currentUserId });}\r\n        else{\r\n            let currentUserId = {}\r\n        this.setState({ user: user });\r\n        this.setState({ userId: userId });\r\n        this.setState({ currentUserId: currentUserId });\r\n        }\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setValues();\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n     this.setValues();\r\n    }\r\n\r\n\r\n    render() {\r\n        let users = this.props.users;\r\n        let user = users.find(user => (user.id === this.props.comment.user_id)) || {};\r\n        let userId = this.state.userId\r\n        let currentUserId = this.state.currentUserId;\r\n        let comment = this.props.comment\r\n        let deleteComment= this.props.deleteComment\r\n        console.log(user)\r\n        console.log(userId)\r\n        console.log(comment)\r\n        console.log(currentUserId)\r\n        console.warn(this.props.users);\r\n        \r\n        if (userId === currentUserId) {\r\n            return (\r\n                <div id=\"commentContainer\">\r\n                    <div id=\"articleComment\">\r\n                        <div className=\"commentContent\">\r\n                            <div className=\"commenterName\"><h1 className=\"commentOwner\">{user.name}</h1></div>\r\n                            <div className=\"commentText\"><p>{comment.text}</p></div>\r\n                        </div>\r\n                        <div className=\"deleteComment\">\r\n                            <button className=\"deleteCommentButton\" onClick={() => { deleteComment(comment.id) }}>X</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div id=\"commentContainer\">\r\n                <div id=\"articleComment\">\r\n                    <div className=\"commentContent\">\r\n                        <div className=\"commenterName\"><h1 className=\"commentOwner\">{user.name}</h1></div>\r\n                        <div className=\"commentText\"><p>{comment.text}</p></div>\r\n                    </div>\r\n                    <div className=\"deleteComment\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}