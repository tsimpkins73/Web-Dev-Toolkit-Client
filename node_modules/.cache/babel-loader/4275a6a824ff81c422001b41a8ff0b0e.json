{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\t73de\\\\Desktop\\\\the console\\\\src\\\\CommentView.js\";\nimport React from 'react'; //import './CommentView.css'\n\nexport default class CommentView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setValues = () => {\n      let users = this.props.users;\n      let user = users.filter(user => user.id === this.props.comment.user_id);\n      let userId = this.props.comment.user_id;\n      let currentUserId = this.props.currentUser.id;\n      this.setState({\n        user: user\n      });\n      this.setState({\n        userId: userId\n      });\n      this.setState({\n        currentUserId: currentUserId\n      });\n    };\n\n    this.state = {\n      user: [],\n      userId: [],\n      currentUserId: []\n    };\n  }\n\n  componentDidMount() {\n    this.setValues();\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.articleId !== this.props.articleId) {\n      let currentArticle = newProps.currentArticle;\n      let users = newProps.users;\n      this.setState({\n        currentArticle: currentArticle,\n        users: users\n      });\n    }\n    /*     else {\r\n            let currentArticle = this.props.currentArticle \r\n            this.setState({ currentArticle: currentArticle });\r\n            this.setState({ articleComments: [] })\r\n        } */\n\n  }\n\n  render() {\n    let user = this.state.user;\n    let userId = this.state.userId;\n    let currentUserId = this.state.currentUserId;\n    let comment = this.props.comment;\n    let deleteComment = this.props.deleteComment;\n    console.log(user);\n\n    if (userId === currentUserId) {\n      return React.createElement(\"div\", {\n        id: \"commentContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"articleComment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"commentContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"commenterName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        class: \"commentOwner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, user.name)), React.createElement(\"div\", {\n        class: \"commentText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, comment.text))), React.createElement(\"div\", {\n        class: \"deleteComment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"deleteCommentButton\",\n        onClick: () => {\n          deleteComment(comment.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"X\"))));\n    }\n\n    return React.createElement(\"div\", {\n      id: \"commentContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"articleComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"commentContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"commenterName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"commentOwner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, user.name)), React.createElement(\"div\", {\n      class: \"commentText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, comment.text))), React.createElement(\"div\", {\n      class: \"deleteComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/t73de/Desktop/the console/src/CommentView.js"],"names":["React","CommentView","Component","constructor","props","setValues","users","user","filter","id","comment","user_id","userId","currentUserId","currentUser","setState","state","componentDidMount","componentWillReceiveProps","newProps","articleId","currentArticle","render","deleteComment","console","log","name","text"],"mappings":"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","sourcesContent":["import React from 'react'\r\n//import './CommentView.css'\r\n\r\nexport default class CommentView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: [],\r\n            userId: [],\r\n            currentUserId: []\r\n        };\r\n    }\r\n\r\n    setValues = () => {\r\n        let users = this.props.users;\r\n        let user = users.filter(user => (user.id === this.props.comment.user_id));\r\n        let userId = this.props.comment.user_id\r\n        let currentUserId = this.props.currentUser.id\r\n        this.setState({ user: user });\r\n        this.setState({ userId: userId });\r\n        this.setState({ currentUserId: currentUserId });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setValues();\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.articleId !== this.props.articleId) {\r\n            let currentArticle = newProps.currentArticle \r\n            let users = newProps.users;\r\n            this.setState({ currentArticle: currentArticle, users:users });\r\n        }\r\n\r\n    /*     else {\r\n            let currentArticle = this.props.currentArticle \r\n            this.setState({ currentArticle: currentArticle });\r\n            this.setState({ articleComments: [] })\r\n        } */\r\n    }\r\n\r\n\r\n    render() {\r\n        let user = this.state.user\r\n        let userId = this.state.userId\r\n        let currentUserId = this.state.currentUserId\r\n        let comment = this.props.comment\r\n        let deleteComment= this.props.deleteComment\r\n        console.log(user)\r\n\r\n        if (userId === currentUserId) {\r\n            return (\r\n                <div id=\"commentContainer\">\r\n                    <div id=\"articleComment\">\r\n                        <div class=\"commentContent\">\r\n                            <div class=\"commenterName\"><h1 class=\"commentOwner\">{user.name}</h1></div>\r\n                            <div class=\"commentText\"><p>{comment.text}</p></div>\r\n                        </div>\r\n                        <div class=\"deleteComment\">\r\n                            <button class=\"deleteCommentButton\" onClick={() => { deleteComment(comment.id) }}>X</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div id=\"commentContainer\">\r\n                <div id=\"articleComment\">\r\n                    <div class=\"commentContent\">\r\n                        <div class=\"commenterName\"><h1 class=\"commentOwner\">{user.name}</h1></div>\r\n                        <div class=\"commentText\"><p>{comment.text}</p></div>\r\n                    </div>\r\n                    <div class=\"deleteComment\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}