{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GRAPHICS\\\\Desktop\\\\Web-Dev-Toolkit\\\\Web-Dev-Toolkit-Client\\\\src\\\\Dashboard.js\";\nimport React from 'react';\nimport { Route, Link } from \"react-router-dom\";\nimport ResourceTypeList from './ResourceTypeList.js';\nimport ResourceTypePage from './ResourceTypePage.js';\nimport './css/Dashboard.css';\nimport TokenService from './services/token-service';\nexport default class Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogoutClick = () => {\n      TokenService.clearAuthToken();\n      this.props.clearUser();\n    };\n\n    this.handleSearchSubmit = e => {\n      this.props.handleSearchForm(e);\n      const url = 'dashboard/search/' + e.currentTarget.searchTerm.value;\n      window.location.href = url;\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      id: \"dashboardContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      id: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"lpHeaderText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Web Dev Toolkit\")), React.createElement(\"section\", {\n      id: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Link, {\n      id: \"navLink\",\n      onClick: this.handleLogoutClick,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(Link, {\n      id: \"navLink\",\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"form\", {\n      onSubmit: this.handleSearchSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      name: \"searchTerm\",\n      placeholder: \"Search...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Search\")), React.createElement(Link, {\n      id: \"navLink\",\n      to: \"/dashboard/favorites\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Favorites\")), React.createElement(\"section\", {\n      id: \"mainContentContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: '/dashboard',\n      render: props => {\n        return React.createElement(ResourceTypeList, {\n          resources: this.props.resources,\n          types: this.props.types,\n          searchTerm: this.props.searchterm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: '/dashboard/resource/:type',\n      render: props => {\n        let types = this.props.types;\n        let resourceType = types.find(a => a.name === props.match.params.type);\n        console.log(resourceType);\n        return React.createElement(ResourceTypePage, {\n          resourceType: resourceType,\n          resourceTypeName: resourceType.name,\n          handleFavoriteButton: this.props.handleFavoriteButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: '/dashboard/search/:searchterm',\n      render: props => {\n        const searchTerm = props.match.params.searchterm;\n        console.log(searchTerm);\n        let searchResources = this.props.resources.filter(resource => resource.summary.indexOf(props.match.params.searchterm) || resource.headline.indexOf(props.match.params.searchterm) >= 0);\n        console.log(searchResources);\n        return React.createElement(ResourceTypePage, {\n          searchResources: searchResources,\n          searchTerm: searchTerm,\n          resourceTypeName: searchTerm,\n          handleFavoriteButton: this.props.handleFavoriteButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: '/dashboard/favorites',\n      render: props => {\n        let favoriteResources = this.props.resources.filter(resource => resource.favorite);\n        console.log(favoriteResources);\n        return React.createElement(ResourceTypePage, {\n          favoriteResources: favoriteResources,\n          resourceTypeName: \"Favorites\",\n          handleFavoriteButton: this.props.handleFavoriteButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/GRAPHICS/Desktop/Web-Dev-Toolkit/Web-Dev-Toolkit-Client/src/Dashboard.js"],"names":["React","Route","Link","ResourceTypeList","ResourceTypePage","TokenService","Dashboard","Component","handleLogoutClick","clearAuthToken","props","clearUser","handleSearchSubmit","e","handleSearchForm","url","currentTarget","searchTerm","value","window","location","href","render","resources","types","searchterm","resourceType","find","a","name","match","params","type","console","log","handleFavoriteButton","searchResources","filter","resource","summary","indexOf","headline","favoriteResources","favorite"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport ResourceTypeList from './ResourceTypeList.js'\r\nimport ResourceTypePage from './ResourceTypePage.js'\r\nimport './css/Dashboard.css'\r\nimport TokenService from './services/token-service'\r\n\r\nexport default class Dashboard extends React.Component {\r\n    handleLogoutClick = () => {\r\n        TokenService.clearAuthToken();\r\n        this.props.clearUser();\r\n    }\r\n    handleSearchSubmit=(e) => {\r\n        this.props.handleSearchForm(e)\r\n        const url = 'dashboard/search/'+ e.currentTarget.searchTerm.value;\r\n        window.location.href=url;\r\n          }\r\n\r\n\r\n    render() {\r\n        return (<section id=\"dashboardContainer\">\r\n            <section id=\"Header\"><h1 class=\"lpHeaderText\">Web Dev Toolkit</h1></section>\r\n            <section id=\"navbar\"><Link id='navLink' onClick={this.handleLogoutClick} to='/'>\r\n                    Logout\r\n        </Link>\r\n        <Link id='navLink' to='/dashboard'>\r\n                    Home\r\n        </Link>\r\n        <form onSubmit={this.handleSearchSubmit}>\r\n                <input type=\"text\" className=\"input\" name=\"searchTerm\" placeholder=\"Search...\" />\r\n                <button type=\"submit\">Search</button>\r\n                </form>\r\n                <Link id='navLink' to='/dashboard/favorites'>Favorites</ Link></section>\r\n            <section id=\"mainContentContainer\">\r\n                <Route exact path={'/dashboard'} render={(props) => { return <ResourceTypeList resources={this.props.resources} types={this.props.types} searchTerm={this.props.searchterm} /> }} />\r\n                <Route path={'/dashboard/resource/:type'} render={(props) => {\r\n                    let types = this.props.types;\r\n                    let resourceType = (types.find(a => a.name === props.match.params.type));\r\n                    console.log(resourceType)\r\n                    return <ResourceTypePage resourceType={resourceType} resourceTypeName={resourceType.name} handleFavoriteButton={this.props.handleFavoriteButton} />\r\n                }} />\r\n                <Route path={'/dashboard/search/:searchterm'} render={(props) => {\r\n                    const searchTerm = props.match.params.searchterm\r\n                    console.log(searchTerm)\r\n                    let searchResources = (this.props.resources.filter(resource => resource.summary.indexOf(props.match.params.searchterm) || resource.headline.indexOf(props.match.params.searchterm)>= 0));\r\n                    console.log(searchResources)\r\n                    return <ResourceTypePage searchResources={searchResources} searchTerm={searchTerm} resourceTypeName={searchTerm} handleFavoriteButton={this.props.handleFavoriteButton} />\r\n                }} />\r\n                <Route path={'/dashboard/favorites'} render={(props) => {\r\n                    let favoriteResources = (this.props.resources.filter(resource => resource.favorite));\r\n                    console.log(favoriteResources)\r\n                    return <ResourceTypePage favoriteResources={favoriteResources} resourceTypeName='Favorites' handleFavoriteButton={this.props.handleFavoriteButton} />\r\n                }} />\r\n            </section>\r\n        </section>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}