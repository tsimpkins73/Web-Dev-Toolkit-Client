{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\t73de\\\\Desktop\\\\the console\\\\src\\\\CommentView.js\";\nimport React from 'react'; //import './CommentView.css'\n\nexport default class CommentView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setValues = () => {\n      let users = this.props.users; // if(!this.props.users){ users =  this.props.article || {}}\n\n      console.log(users);\n\n      if (users) {\n        let user = users.filter(user => user.id === this.props.comment.user_id);\n        let userId = this.props.comment.user_id;\n        let currentUserId = this.props.currentUser.id;\n        this.setState({\n          user: user\n        });\n        this.setState({\n          userId: userId\n        });\n        this.setState({\n          currentUserId: currentUserId\n        });\n      }\n    };\n\n    this.state = {\n      user: [],\n      userId: [],\n      currentUserId: []\n    };\n  }\n\n  componentWillMount() {\n    this.setValues();\n  }\n\n  componentWillReceiveProps(newProps) {\n    let user = users.filter(user => user.id === this.props.comment.user_id);\n    let userId = this.props.comment.user_id;\n    let currentUserId = this.props.currentUser.id;\n    this.setState({\n      user: user\n    });\n    this.setState({\n      userId: userId\n    });\n    this.setState({\n      currentUserId: currentUserId\n    });\n    /*     else {\r\n            let currentArticle = this.props.currentArticle \r\n            this.setState({ currentArticle: currentArticle });\r\n            this.setState({ articleComments: [] })\r\n        } */\n  }\n\n  render() {\n    let user = this.state.user;\n    let userId = this.state.userId;\n    let currentUserId = this.state.currentUserId;\n    let comment = this.props.comment;\n    let deleteComment = this.props.deleteComment;\n    console.log(user);\n\n    if (userId === currentUserId) {\n      return React.createElement(\"div\", {\n        id: \"commentContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"articleComment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"commentContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"commenterName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        class: \"commentOwner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, user.name)), React.createElement(\"div\", {\n        class: \"commentText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, comment.text))), React.createElement(\"div\", {\n        class: \"deleteComment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"deleteCommentButton\",\n        onClick: () => {\n          deleteComment(comment.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"X\"))));\n    }\n\n    return React.createElement(\"div\", {\n      id: \"commentContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"articleComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"commentContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"commenterName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"commentOwner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, user.name)), React.createElement(\"div\", {\n      class: \"commentText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, comment.text))), React.createElement(\"div\", {\n      class: \"deleteComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/t73de/Desktop/the console/src/CommentView.js"],"names":["React","CommentView","Component","constructor","props","setValues","users","console","log","user","filter","id","comment","user_id","userId","currentUserId","currentUser","setState","state","componentWillMount","componentWillReceiveProps","newProps","render","deleteComment","name","text"],"mappings":"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","sourcesContent":["import React from 'react'\r\n//import './CommentView.css'\r\n\r\nexport default class CommentView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: [],\r\n            userId: [],\r\n            currentUserId: []\r\n        };\r\n    }\r\n\r\n    setValues = () => {\r\n\r\n        let users = this.props.users;\r\n        // if(!this.props.users){ users =  this.props.article || {}}\r\n        console.log(users);\r\n        if(users){\r\n        let user = users.filter(user => (user.id === this.props.comment.user_id));\r\n        let userId = this.props.comment.user_id\r\n        let currentUserId = this.props.currentUser.id\r\n        this.setState({ user: user });\r\n        this.setState({ userId: userId });\r\n        this.setState({ currentUserId: currentUserId });\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        this.setValues();\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        let user = users.filter(user => (user.id === this.props.comment.user_id));\r\n        let userId = this.props.comment.user_id\r\n        let currentUserId = this.props.currentUser.id\r\n        this.setState({ user: user });\r\n        this.setState({ userId: userId });\r\n        this.setState({ currentUserId: currentUserId });\r\n\r\n    /*     else {\r\n            let currentArticle = this.props.currentArticle \r\n            this.setState({ currentArticle: currentArticle });\r\n            this.setState({ articleComments: [] })\r\n        } */\r\n    }\r\n\r\n\r\n    render() {\r\n        let user = this.state.user\r\n        let userId = this.state.userId\r\n        let currentUserId = this.state.currentUserId\r\n        let comment = this.props.comment\r\n        let deleteComment= this.props.deleteComment\r\n        console.log(user)\r\n\r\n        if (userId === currentUserId) {\r\n            return (\r\n                <div id=\"commentContainer\">\r\n                    <div id=\"articleComment\">\r\n                        <div class=\"commentContent\">\r\n                            <div class=\"commenterName\"><h1 class=\"commentOwner\">{user.name}</h1></div>\r\n                            <div class=\"commentText\"><p>{comment.text}</p></div>\r\n                        </div>\r\n                        <div class=\"deleteComment\">\r\n                            <button class=\"deleteCommentButton\" onClick={() => { deleteComment(comment.id) }}>X</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div id=\"commentContainer\">\r\n                <div id=\"articleComment\">\r\n                    <div class=\"commentContent\">\r\n                        <div class=\"commenterName\"><h1 class=\"commentOwner\">{user.name}</h1></div>\r\n                        <div class=\"commentText\"><p>{comment.text}</p></div>\r\n                    </div>\r\n                    <div class=\"deleteComment\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}