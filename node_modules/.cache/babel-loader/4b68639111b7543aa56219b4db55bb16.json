{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\t73de\\\\Desktop\\\\Web-Dev-Toolkit-Client\\\\src\\\\ResourceTypePage.js\";\nimport React from 'react';\nimport './css/ResourceTypeView.css';\nimport ResourceTypeView from \"./ResourceTypeView.js\";\nimport { Link } from 'react-router-dom';\nimport { API_BASE_URL } from './config';\nexport default class ResourceTypePreview extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.getResourcesForTypes = typeID => {\n      fetch(\"\".concat(API_BASE_URL, \"/resources/byType/\").concat(typeID)).then(response => response.json()).then(typeResources => {\n        this.setState({\n          typeResources\n        });\n      });\n    };\n\n    this.state = {\n      typeResources: []\n    };\n  }\n\n  componentDidMount() {\n    let resourceType = this.props.resourceType;\n\n    if (this.props.resourceTypeName == 'Favorites') {\n      this.setState({\n        typeResources: this.props.favoriteResources\n      });\n    } else {\n      this.getResourcesForTypes(resourceType.id);\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.resourceType !== this.props.resourceType) {\n      this.getResourcesForTypes(newProps.resourceType.id);\n    }\n  }\n\n  render(props) {\n    console.log(this.props.resourceType);\n    let resourceType = this.props.resourceType;\n    let resourceForTypes = this.props.resourceForTypes;\n    let thisTypeResourceIDs = resourceType.filter(type => type.id == resourceForTypes.type_id);\n    let typeResources = this.state.typeResources;\n    return React.createElement(\"section\", {\n      id: \"resource-full-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"resource-section-headline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, resourceType.name), React.createElement(\"section\", {\n      id: \"resource-component-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, typeResources.map(function (resource) {\n      return React.createElement(ResourceTypeView, {\n        resource: resource,\n        handleFavoriteButton: () => this.props.handleFavoriteButton(resource),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    })));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/t73de/Desktop/Web-Dev-Toolkit-Client/src/ResourceTypePage.js"],"names":["React","ResourceTypeView","Link","API_BASE_URL","ResourceTypePreview","Component","constructor","props","context","getResourcesForTypes","typeID","fetch","then","response","json","typeResources","setState","state","componentDidMount","resourceType","resourceTypeName","favoriteResources","id","componentWillReceiveProps","newProps","render","console","log","resourceForTypes","thisTypeResourceIDs","filter","type","type_id","name","map","resource","handleFavoriteButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,4BAAP;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,UAA7B;AAEA,eAAe,MAAMC,mBAAN,SAAkCJ,KAAK,CAACK,SAAxC,CAAkD;AAC7DC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACxB,UAAMD,KAAN,EAAaC,OAAb;;AADwB,SAS5BC,oBAT4B,GASJC,MAAD,IAAY;AAC/BC,MAAAA,KAAK,WAAIR,YAAJ,+BAAqCO,MAArC,EAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEWG,aAAD,IAAmB;AAAE,aAAKC,QAAL,CAAc;AAAED,UAAAA;AAAF,SAAd;AAAmC,OAFlE;AAGH,KAb2B;;AAGxB,SAAKE,KAAL,GAAa;AACTF,MAAAA,aAAa,EAAE;AADN,KAAb;AAGH;;AASDG,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,YAAY,GAAG,KAAKZ,KAAL,CAAWY,YAA9B;;AACA,QAAI,KAAKZ,KAAL,CAAWa,gBAAX,IAA+B,WAAnC,EAAgD;AAC5C,WAAKJ,QAAL,CAAc;AAAED,QAAAA,aAAa,EAAE,KAAKR,KAAL,CAAWc;AAA5B,OAAd;AACH,KAFD,MAGK;AACD,WAAKZ,oBAAL,CAA0BU,YAAY,CAACG,EAAvC;AACH;AACJ;;AAEDC,EAAAA,yBAAyB,CAACC,QAAD,EAAW;AAChC,QAAGA,QAAQ,CAACL,YAAT,KAA0B,KAAKZ,KAAL,CAAWY,YAAxC,EAAqD;AACjD,WAAKV,oBAAL,CAA0Be,QAAQ,CAACL,YAAT,CAAsBG,EAAhD;AACH;AAEJ;;AAEDG,EAAAA,MAAM,CAAClB,KAAD,EAAQ;AACVmB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWY,YAAvB;AACA,QAAIA,YAAY,GAAG,KAAKZ,KAAL,CAAWY,YAA9B;AACA,QAAIS,gBAAgB,GAAG,KAAKrB,KAAL,CAAWqB,gBAAlC;AACA,QAAIC,mBAAmB,GAAGV,YAAY,CAACW,MAAb,CAAoBC,IAAI,IAAIA,IAAI,CAACT,EAAL,IAAWM,gBAAgB,CAACI,OAAxD,CAA1B;AACA,QAAIjB,aAAa,GAAG,KAAKE,KAAL,CAAWF,aAA/B;AACA,WACI;AAAS,MAAA,EAAE,EAAC,yBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAC,2BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCI,YAAY,CAACc,IAApD,CADJ,EAEI;AAAS,MAAA,EAAE,EAAC,8BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKlB,aAAa,CAACmB,GAAd,CAAkB,UAAUC,QAAV,EAAoB;AACnC,aAAO,oBAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEA,QAA5B;AAAsC,QAAA,oBAAoB,EAAE,MAAM,KAAK5B,KAAL,CAAW6B,oBAAX,CAAgCD,QAAhC,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFA,CADL,CAFJ,CADJ;AAUH;;AAjD4D","sourcesContent":["import React from 'react'\r\nimport './css/ResourceTypeView.css'\r\nimport ResourceTypeView from \"./ResourceTypeView.js\";\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './config'\r\n\r\nexport default class ResourceTypePreview extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            typeResources: [],\r\n        };\r\n    }\r\n\r\n\r\n    getResourcesForTypes = (typeID) => {\r\n        fetch(`${API_BASE_URL}/resources/byType/${typeID}`)\r\n            .then(response => response.json())\r\n            .then((typeResources) => { this.setState({ typeResources }); });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let resourceType = this.props.resourceType;\r\n        if (this.props.resourceTypeName == 'Favorites') {\r\n            this.setState({ typeResources: this.props.favoriteResources })\r\n        }\r\n        else {\r\n            this.getResourcesForTypes(resourceType.id);\r\n        }\r\n    };\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if(newProps.resourceType !== this.props.resourceType){\r\n            this.getResourcesForTypes(newProps.resourceType.id);\r\n        }\r\n\r\n    }\r\n\r\n    render(props) {\r\n        console.log(this.props.resourceType);\r\n        let resourceType = this.props.resourceType;\r\n        let resourceForTypes = this.props.resourceForTypes;\r\n        let thisTypeResourceIDs = resourceType.filter(type => type.id == resourceForTypes.type_id);\r\n        let typeResources = this.state.typeResources;\r\n        return (\r\n            <section id=\"resource-full-container\">\r\n                <h1 class=\"resource-section-headline\">{resourceType.name}</h1>\r\n                <section id=\"resource-component-container\">\r\n                    {typeResources.map(function (resource) {\r\n                        return <ResourceTypeView resource={resource} handleFavoriteButton={() => this.props.handleFavoriteButton(resource)} />;\r\n                    })}\r\n                </section>\r\n            </section>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}