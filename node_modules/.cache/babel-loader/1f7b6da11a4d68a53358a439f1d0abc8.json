{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\t73de\\\\Desktop\\\\Web-Dev-Toolkit-Client\\\\src\\\\ResourceTypeView.js\";\nimport React from 'react';\nimport './css/ResourceTypeView.css';\nimport { Link } from 'react-router-dom';\nexport default class ResourceTypeView extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleURLButton = resourceURL => {\n      window.location.href = resourceURL;\n    };\n  }\n\n  render() {\n    let resource = this.props.resource;\n    let resourceType = this.props.resourceType;\n    let commonTypes = ['Tutorials', 'Courses', 'Videos', 'Utilities'];\n\n    if (commonTypes.includes(resourceType)) {\n      return React.createElement(\"div\", {\n        id: \"resource-Full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"resourceImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"previewImage\",\n        alt: \"Headline Image for \" + resource.headline,\n        src: \"/images/\" + resourceType + \".svg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"resourceText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        id: \"resourceText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, resource.headline), React.createElement(\"p\", {\n        id: \"resourceText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, resource.summary)), React.createElement(\"div\", {\n        id: \"resourceButtons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleURLButton.bind(this, resource.url),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Go to Resource\"), React.createElement(\"button\", {\n        onClick: this.props.handleFavoriteButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Favorite Button\")));\n    } else {\n      return React.createElement(\"div\", {\n        id: \"resource-Full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"resourceText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        id: \"resourceText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, resource.headline), React.createElement(\"p\", {\n        id: \"resourceText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, resource.summary)), React.createElement(\"div\", {\n        id: \"resourceButtons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleURLButton.bind(this, resource.url),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Go to Resource\"), React.createElement(\"button\", {\n        onClick: this.props.handleFavoriteButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Favorite Button\")));\n    }\n  }\n\n}","map":{"version":3,"sources":["c:/Users/t73de/Desktop/Web-Dev-Toolkit-Client/src/ResourceTypeView.js"],"names":["React","Link","ResourceTypeView","Component","handleURLButton","resourceURL","window","location","href","render","resource","props","resourceType","commonTypes","includes","headline","summary","bind","url","handleFavoriteButton"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,4BAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,eAAe,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAAA;AAAA;;AAAA,SAE1DC,eAF0D,GAEvCC,WAAD,IAAiB;AAC/BC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBH,WAAvB;AAEH,KALyD;AAAA;;AAO1DI,EAAAA,MAAM,GAAG;AACL,QAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAA1B;AACA,QAAIE,YAAY,GAAG,KAAKD,KAAL,CAAWC,YAA9B;AACA,QAAIC,WAAW,GAAG,CAAC,WAAD,EAAc,SAAd,EAAyB,QAAzB,EAAmC,WAAnC,CAAlB;;AACA,QAAIA,WAAW,CAACC,QAAZ,CAAqBF,YAArB,CAAJ,EAAwC;AACpC,aACI;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB;AAAK,QAAA,EAAE,EAAC,cAAR;AAAuB,QAAA,GAAG,EAAE,wBAAwBF,QAAQ,CAACK,QAA7D;AAAuE,QAAA,GAAG,EAAE,aAAaH,YAAb,GAA4B,MAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB,CADJ,EAEI;AAAK,QAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,EAAE,EAAC,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBF,QAAQ,CAACK,QAAhC,CADJ,EAEI;AAAG,QAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBL,QAAQ,CAACM,OAA/B,CAFJ,CAFJ,EAMI;AAAK,QAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKZ,eAAL,CAAqBa,IAArB,CAA0B,IAA1B,EAAgCP,QAAQ,CAACQ,GAAzC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAC4F;AAAQ,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWQ,oBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAD5F,CANJ,CADJ;AAYH,KAbD,MAcK;AACD,aACI;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,EAAE,EAAC,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBT,QAAQ,CAACK,QAAhC,CADJ,EAEI;AAAG,QAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBL,QAAQ,CAACM,OAA/B,CAFJ,CADJ,EAKI;AAAK,QAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKZ,eAAL,CAAqBa,IAArB,CAA0B,IAA1B,EAAgCP,QAAQ,CAACQ,GAAzC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAC4F;AAAQ,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWQ,oBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAD5F,CALJ,CADJ;AAWH;AACJ;;AAtCyD","sourcesContent":["\r\nimport React from 'react'\r\nimport './css/ResourceTypeView.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class ResourceTypeView extends React.Component {\r\n\r\n    handleURLButton = (resourceURL) => {\r\n        window.location.href = resourceURL;\r\n\r\n    }\r\n\r\n    render() {\r\n        let resource = this.props.resource;\r\n        let resourceType = this.props.resourceType;\r\n        let commonTypes = ['Tutorials', 'Courses', 'Videos', 'Utilities']\r\n        if (commonTypes.includes(resourceType)) {\r\n            return (\r\n                <div id=\"resource-Full\">\r\n                    <div id=\"resourceImage\"><img id=\"previewImage\" alt={\"Headline Image for \" + resource.headline} src={\"/images/\" + resourceType + \".svg\"} /></div>\r\n                    <div id=\"resourceText\">\r\n                        <h3 id=\"resourceText\">{resource.headline}</h3>\r\n                        <p id=\"resourceText\">{resource.summary}</p>\r\n                    </div>\r\n                    <div id=\"resourceButtons\">\r\n                        <button onClick={this.handleURLButton.bind(this, resource.url)} >Go to Resource</button><button onClick={this.props.handleFavoriteButton}>Favorite Button</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div id=\"resource-Full\">\r\n                    <div id=\"resourceText\">\r\n                        <h3 id=\"resourceText\">{resource.headline}</h3>\r\n                        <p id=\"resourceText\">{resource.summary}</p>\r\n                    </div>\r\n                    <div id=\"resourceButtons\">\r\n                        <button onClick={this.handleURLButton.bind(this, resource.url)} >Go to Resource</button><button onClick={this.props.handleFavoriteButton}>Favorite Button</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}