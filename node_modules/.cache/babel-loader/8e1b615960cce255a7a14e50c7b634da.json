{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\t73de\\\\Desktop\\\\the console\\\\src\\\\ArticleView.js\";\nimport ArticleService from './services/article-service';\nimport React from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport CommentsList from './CommentsList.js';\nimport AddCommentView from './AddCommentView.js';\nimport './css/ArticleView.css';\nimport { API_BASE_URL } from './config';\nexport default class ArticleView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addComment = comment => {\n      const articleComments = [...this.state.articleComments, comment];\n      this.setState({\n        articleComments\n      });\n      const getCommentList = document.getElementById(\"articleComments\");\n      getCommentList.scrollIntoView({\n        block: \"end\"\n      });\n    };\n\n    this.getComments = article_id => {\n      fetch(\"\".concat(API_BASE_URL, \"/comments/\").concat(article_id)).then(response => response.json()).then(articleComments => {\n        this.setState({\n          articleComments\n        });\n      });\n    };\n\n    this.removeCommentFromState = commentId => {\n      let articleComments = this.state.articleComments.filter(articleComment => articleComment.id === commentId);\n      this.setState({\n        articleComments\n      });\n    };\n\n    this.deleteComment = commentId => {\n      ArticleService.deleteComment(commentId).then(this.removeCommentFromState(commentId)).catch(this.context.setError);\n    };\n\n    this.setArticle = article_id => {\n      let articleId = article_id;\n      let articles = this.state.articles;\n      let article = articles.find(a => a.id == articleId);\n      console.log(articles);\n      this.setState({\n        currentArticle: article\n      });\n    };\n\n    this.state = {\n      articleComments: [],\n      articles: [],\n      currentArticle: []\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.article.id) {\n      let articles = this.props.articles;\n      this.setState({\n        articles: articles\n      });\n      console.log(this.state.articles);\n      this.setArticle(this.props.article.id);\n      this.getComments(this.props.article.id);\n    } else {\n      this.setState({\n        articleComments: []\n      });\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.article.id !== this.props.article.id) {\n      this.setState({\n        articles: this.props.articles\n      });\n      this.setArticle(this.props.article.id);\n      this.getComments(this.props.article.id);\n    }\n\n    if (newProps.articles !== this.props.articles) {\n      this.setState({\n        articles: newProps.articles\n      });\n    } else {\n      this.setState({\n        articles: this.props.articles\n      });\n      this.setState({\n        articleComments: []\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state.currentArticle);\n    const user = this.props.user;\n    return React.createElement(\"div\", {\n      id: \"article-full-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      id: \"article-Full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"articleImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"previewImage\",\n      alt: \"Headline Image for \" + this.props.article.headline,\n      src: this.props.article.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"articleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      id: \"articleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.props.article.headline), React.createElement(\"p\", {\n      id: \"articleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.props.article.text)), React.createElement(\"div\", {\n      id: \"articleButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.props.handleFavoriteButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Favorite\"), React.createElement(Link, {\n      to: \"/dashboard/article/\" + this.props.article.id + \"/comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Add Comment\"))), React.createElement(Route, {\n      exact: true,\n      path: \"/dashboard/article/\".concat(this.props.article.id, \"/comment\"),\n      render: () => React.createElement(AddCommentView, {\n        addComment: this.addComment,\n        article: this.props.article,\n        articleId: this.props.article.id,\n        getComments: this.getComments,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(CommentsList, {\n      articleId: this.props.articleId,\n      users: this.props.users,\n      articleComments: this.state.articleComments,\n      currentUser: this.props.currentUser,\n      deleteComment: this.deleteComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/t73de/Desktop/the console/src/ArticleView.js"],"names":["ArticleService","React","Link","Route","CommentsList","AddCommentView","API_BASE_URL","ArticleView","Component","constructor","props","addComment","comment","articleComments","state","setState","getCommentList","document","getElementById","scrollIntoView","block","getComments","article_id","fetch","then","response","json","removeCommentFromState","commentId","filter","articleComment","id","deleteComment","catch","context","setError","setArticle","articleId","articles","article","find","a","console","log","currentArticle","componentDidMount","componentWillReceiveProps","newProps","render","user","headline","image","text","handleFavoriteButton","users","currentUser"],"mappings":"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","sourcesContent":["import ArticleService from './services/article-service';\r\nimport React from 'react'\r\nimport { Link, Route } from 'react-router-dom';\r\nimport CommentsList from './CommentsList.js'\r\nimport AddCommentView from './AddCommentView.js'\r\nimport './css/ArticleView.css'\r\nimport { API_BASE_URL } from './config'\r\n\r\nexport default class ArticleView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            articleComments: [],\r\n            articles: [],\r\n            currentArticle: []\r\n        };\r\n    }\r\n\r\n    addComment = comment => {\r\n        const articleComments = [\r\n            ...this.state.articleComments,\r\n            comment\r\n        ]\r\n        this.setState({ articleComments })\r\n        const getCommentList = document.getElementById(\"articleComments\");\r\n        getCommentList.scrollIntoView({ block: \"end\" });\r\n    }\r\n\r\n    getComments = (article_id) => {\r\n        fetch(`${API_BASE_URL}/comments/${article_id}`)\r\n            .then(response => response.json())\r\n            .then((articleComments) => { this.setState({ articleComments }); });\r\n    }\r\n\r\n    removeCommentFromState = (commentId) => {\r\n        let articleComments = this.state.articleComments.filter(articleComment => articleComment.id === commentId)\r\n        this.setState({ articleComments })\r\n    }\r\n\r\n    deleteComment = (commentId) => {\r\n        ArticleService.deleteComment(commentId)\r\n            .then(this.removeCommentFromState(commentId))\r\n            .catch(this.context.setError)\r\n    }\r\n\r\nsetArticle = (article_id) => {\r\n    let articleId = article_id\r\n    let articles = this.state.articles\r\n    let article = (articles.find(a => (a.id == articleId)))\r\n    console.log(articles);\r\n    this.setState({ currentArticle: article });\r\n}\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.article.id) {\r\n            let articles = this.props.articles\r\n            this.setState({ articles: articles });\r\n            console.log(this.state.articles);\r\n            this.setArticle(this.props.article.id);\r\n            this.getComments(this.props.article.id);\r\n\r\n        }\r\n        else {\r\n            this.setState({ articleComments: [] })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.article.id !== this.props.article.id) {\r\n            this.setState({ articles: this.props.articles });\r\n            this.setArticle(this.props.article.id);\r\n            this.getComments(this.props.article.id);\r\n        }\r\n\r\n        if (newProps.articles !== this.props.articles){\r\n            this.setState({articles: newProps.articles})\r\n        }\r\n\r\n        else {\r\n            this.setState({ articles: this.props.articles });\r\n            this.setState({ articleComments: [] })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.currentArticle);\r\n        const user = this.props.user;\r\n        return (\r\n            <div id=\"article-full-container\" >\r\n                <section id=\"article-Full\">\r\n                    <div id=\"articleImage\"><img id=\"previewImage\" alt={\"Headline Image for \" + this.props.article.headline} src={this.props.article.image} /></div>\r\n                    <div id=\"articleText\">\r\n                        <h3 id=\"articleText\">{this.props.article.headline}</h3>\r\n                        <p id=\"articleText\">{this.props.article.text}</p>\r\n                    </div>\r\n                    <div id=\"articleButtons\">\r\n                        <button onClick={this.props.handleFavoriteButton}>Favorite</button>\r\n                        <Link to={\"/dashboard/article/\" + this.props.article.id + \"/comment\"}><button>Add Comment</button></Link>\r\n                    </div>\r\n                    <Route exact path={`/dashboard/article/${this.props.article.id}/comment`} render={() => <AddCommentView addComment={this.addComment} article={this.props.article} articleId={this.props.article.id} getComments={this.getComments} user={user} />} />\r\n                    <CommentsList articleId={this.props.articleId} users={this.props.users} articleComments={this.state.articleComments} currentUser={this.props.currentUser} deleteComment={this.deleteComment} />\r\n                </section>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}