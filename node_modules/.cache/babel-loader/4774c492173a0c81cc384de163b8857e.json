{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\t73de\\\\Desktop\\\\Web-Dev-Toolkit-Client\\\\src\\\\Dashboard.js\";\nimport React from 'react';\nimport { Route, Link } from \"react-router-dom\";\nimport ResourceTypeList from './ResourceTypeList.js';\nimport ResourceTypePage from './ResourceTypePage.js';\nimport './css/Dashboard.css';\nimport TokenService from './services/token-service';\nexport default class Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogoutClick = () => {\n      TokenService.clearAuthToken();\n      this.props.clearUser();\n    };\n\n    this.handleSearchSubmit = e => {\n      this.props.handleSearchForm(e);\n      const url = '/dashboard/search/' + e.currentTarget.searchTerm.value;\n      this.props.history.push(url);\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      id: \"dashboardContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      id: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"dashboardHeaderText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Web Dev Toolkit\"), React.createElement(\"section\", {\n      id: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Link, {\n      id: \"navLink\",\n      onClick: this.handleLogoutClick,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(Link, {\n      id: \"navLink\",\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"form\", {\n      onSubmit: this.handleSearchSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      name: \"searchTerm\",\n      placeholder: \"Search...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"searchButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Search\")), React.createElement(Link, {\n      id: \"navLink\",\n      to: \"/dashboard/favorites\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Favorites\"), React.createElement(Link, {\n      id: \"navLink\",\n      to: \"/dashboard/random\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Random\"))), React.createElement(\"section\", {\n      id: \"mainContentContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: '/dashboard',\n      render: props => {\n        return React.createElement(ResourceTypeList, {\n          resources: this.props.resources,\n          types: this.props.types,\n          searchTerm: this.props.searchterm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: '/dashboard/resource/:type',\n      render: props => {\n        let types = this.props.types;\n        let resourceType = types.find(a => a.name === props.match.params.type);\n        return React.createElement(ResourceTypePage, {\n          resourceType: resourceType,\n          resourceTypeName: resourceType.name,\n          handleFavoriteButton: this.props.handleFavoriteButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: '/dashboard/search/:searchterm',\n      render: props => {\n        const searchTerm = props.match.params.searchterm;\n        let searchResources = this.props.resources.filter(resource => resource.summary.indexOf(props.match.params.searchterm) >= 0 || resource.headline.indexOf(props.match.params.searchterm) >= 0);\n        return React.createElement(ResourceTypePage, {\n          searchResources: searchResources,\n          searchTerm: searchTerm,\n          resourceTypeName: searchTerm,\n          handleFavoriteButton: this.props.handleFavoriteButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: '/dashboard/favorites',\n      render: props => {\n        let resourceType = {\n          name: \"Favorites\"\n        };\n        let favoriteResources = this.props.resources.filter(resource => resource.favorite);\n        return React.createElement(ResourceTypePage, {\n          favoriteResources: favoriteResources,\n          resourceType: resourceType,\n          handleFavoriteButton: this.props.handleFavoriteButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: '/dashboard/random',\n      render: props => {\n        let resourceType = {\n          name: \"Random\"\n        };\n        let randomResources = [];\n\n        for (let i = 0; i >= 10; i++) {\n          const randomNumber = Math.floor(Math.random() * this.props.resources.length);\n          randomResources.push(this.props.resources[randomNumber]);\n        }\n\n        console.log(randomResources);\n        return React.createElement(ResourceTypePage, {\n          randomResources: randomResources,\n          resourceType: resourceType,\n          handleFavoriteButton: this.props.handleFavoriteButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/t73de/Desktop/Web-Dev-Toolkit-Client/src/Dashboard.js"],"names":["React","Route","Link","ResourceTypeList","ResourceTypePage","TokenService","Dashboard","Component","handleLogoutClick","clearAuthToken","props","clearUser","handleSearchSubmit","e","handleSearchForm","url","currentTarget","searchTerm","value","history","push","render","resources","types","searchterm","resourceType","find","a","name","match","params","type","handleFavoriteButton","searchResources","filter","resource","summary","indexOf","headline","favoriteResources","favorite","randomResources","i","randomNumber","Math","floor","random","length","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport ResourceTypeList from './ResourceTypeList.js'\r\nimport ResourceTypePage from './ResourceTypePage.js'\r\nimport './css/Dashboard.css'\r\nimport TokenService from './services/token-service'\r\n\r\nexport default class Dashboard extends React.Component {\r\n    handleLogoutClick = () => {\r\n        TokenService.clearAuthToken();\r\n        this.props.clearUser();\r\n    }\r\n    handleSearchSubmit = (e) => {\r\n        this.props.handleSearchForm(e)\r\n        const url = '/dashboard/search/' + e.currentTarget.searchTerm.value;\r\n        this.props.history.push(url);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (<section id=\"dashboardContainer\">\r\n            <section id=\"Header\"><h1 id=\"dashboardHeaderText\">Web Dev Toolkit</h1>\r\n            <section id=\"navbar\"><Link id='navLink' onClick={this.handleLogoutClick} to='/'>\r\n                Logout\r\n        </Link>\r\n                <Link id='navLink' to='/dashboard'>\r\n                    Home\r\n        </Link>\r\n                <form onSubmit={this.handleSearchSubmit}>\r\n                    <input type=\"text\" className=\"input\" name=\"searchTerm\" placeholder=\"Search...\" />\r\n                    <button className=\"searchButton\" type=\"submit\">Search</button>\r\n                </form>\r\n                <Link id='navLink' to='/dashboard/favorites'>Favorites</ Link>\r\n                <Link id='navLink' to='/dashboard/random'>Random</ Link></section>\r\n            </section>\r\n            <section id=\"mainContentContainer\">\r\n                <Route exact path={'/dashboard'} render={(props) => { return <ResourceTypeList resources={this.props.resources} types={this.props.types} searchTerm={this.props.searchterm} /> }} />\r\n                <Route path={'/dashboard/resource/:type'} render={(props) => {\r\n                    let types = this.props.types;\r\n                    let resourceType = (types.find(a => a.name === props.match.params.type));\r\n                    return <ResourceTypePage resourceType={resourceType} resourceTypeName={resourceType.name} handleFavoriteButton={this.props.handleFavoriteButton} />\r\n                }} />\r\n                <Route path={'/dashboard/search/:searchterm'} render={(props) => {\r\n                    const searchTerm = props.match.params.searchterm\r\n                    let searchResources = (this.props.resources.filter(resource => resource.summary.indexOf(props.match.params.searchterm) >= 0 || resource.headline.indexOf(props.match.params.searchterm) >= 0));\r\n                    return <ResourceTypePage searchResources={searchResources} searchTerm={searchTerm} resourceTypeName={searchTerm} handleFavoriteButton={this.props.handleFavoriteButton} />\r\n                }} />\r\n                <Route path={'/dashboard/favorites'} render={(props) => {\r\n                    let resourceType = {name: \"Favorites\"};\r\n                    let favoriteResources = (this.props.resources.filter(resource => resource.favorite));\r\n                    return <ResourceTypePage favoriteResources={favoriteResources} resourceType={resourceType} handleFavoriteButton={this.props.handleFavoriteButton} />\r\n                }} />\r\n                 <Route path={'/dashboard/random'} render={(props) => {\r\n                    let resourceType = {name: \"Random\"};\r\n                    let randomResources = [];\r\n                    for(let i=0; i>=10; i++){\r\n                        const randomNumber = Math.floor(Math.random()* (this.props.resources.length))\r\n                        randomResources.push(this.props.resources[randomNumber])\r\n                    }\r\n                    console.log(randomResources)\r\n                    return <ResourceTypePage randomResources={randomResources} resourceType={resourceType} handleFavoriteButton={this.props.handleFavoriteButton} />\r\n                }} />\r\n            </section>\r\n        </section>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}