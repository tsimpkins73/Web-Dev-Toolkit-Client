{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GRAPHICS\\\\Desktop\\\\Web-Dev-Toolkit\\\\Web-Dev-Toolkit-Client\\\\src\\\\ResourceTypeView.js\";\nimport React from 'react';\nimport './css/ResourceTypeView.css';\nimport { Link } from 'react-router-dom';\nexport default class ResourceTypeView extends React.Component {\n  render() {\n    console.log(this.props.resource);\n    let resource = this.props.resource;\n    /*         let typeResources= this.props.typeResources\r\n            let currentResource = resources.filter(resource = resource.id == resourceID)  */\n\n    return React.createElement(\"section\", {\n      id: \"resource-Full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"resourceImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"previewImage\",\n      alt: \"Headline Image for \" + resource.headline,\n      src: resource.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"resourceText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      id: \"resourceText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, resource.headline), React.createElement(\"p\", {\n      id: \"resourceText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, resource.summary)), React.createElement(\"div\", {\n      id: \"resourceButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"resource-button\",\n      href: resource.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Go to Resource\"), \" \", React.createElement(\"button\", {\n      onClick: this.props.handleFavoriteButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Favorite Button\")));\n  }\n\n}\n/* resourceView.defaultProps = {\r\n    resource: {}\r\n} */","map":{"version":3,"sources":["C:/Users/GRAPHICS/Desktop/Web-Dev-Toolkit/Web-Dev-Toolkit-Client/src/ResourceTypeView.js"],"names":["React","Link","ResourceTypeView","Component","render","console","log","props","resource","headline","image","summary","url","handleFavoriteButton"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,4BAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,eAAe,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAE1DC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAvB;AACA,QAAIA,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA1B;AACR;;;AAEQ,WACQ;AAAS,MAAA,EAAE,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB;AAAK,MAAA,EAAE,EAAC,cAAR;AAAuB,MAAA,GAAG,EAAE,wBAAwBA,QAAQ,CAACC,QAA7D;AAAuE,MAAA,GAAG,EAAED,QAAQ,CAACE,KAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,CADJ,EAEI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,EAAE,EAAC,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBF,QAAQ,CAACC,QAAhC,CADJ,EAEI;AAAG,MAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBD,QAAQ,CAACG,OAA/B,CAFJ,CAFJ,EAMI;AAAK,MAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAG,MAAA,SAAS,EAAC,iBAAb;AAA+B,MAAA,IAAI,EAAEH,QAAQ,CAACI,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,OACsE;AAAQ,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,oBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADtE,CANJ,CADR;AAYH;;AAnByD;AAsB9D","sourcesContent":["\r\nimport React from 'react'\r\nimport './css/ResourceTypeView.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class ResourceTypeView extends React.Component {\r\n\r\n    render() {\r\n        console.log(this.props.resource);\r\n        let resource = this.props.resource\r\n/*         let typeResources= this.props.typeResources\r\n        let currentResource = resources.filter(resource = resource.id == resourceID)  */\r\n        return (\r\n                <section id=\"resource-Full\">\r\n                    <div id=\"resourceImage\"><img id=\"previewImage\" alt={\"Headline Image for \" + resource.headline} src={resource.image} /></div>\r\n                    <div id=\"resourceText\">\r\n                        <h3 id=\"resourceText\">{resource.headline}</h3>\r\n                        <p id=\"resourceText\">{resource.summary}</p>\r\n                    </div>\r\n                    <div id=\"resourceButtons\">\r\n                    <a className=\"resource-button\" href={resource.url}>Go to Resource</a> <button onClick={this.props.handleFavoriteButton}>Favorite Button</button>\r\n                    </div>\r\n                </section>\r\n        );\r\n    }\r\n}\r\n\r\n/* resourceView.defaultProps = {\r\n    resource: {}\r\n} */"]},"metadata":{},"sourceType":"module"}