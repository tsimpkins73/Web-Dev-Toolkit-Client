{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\t73de\\\\Desktop\\\\the console\\\\src\\\\CommentView.js\";\nimport React from 'react'; //import './CommentView.css'\n\nexport default class CommentView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setValues = () => {\n      let users = this.props.users; // if(!this.props.users){ users =  this.props.article || {}}\n\n      console.log(users, this.props.comment);\n\n      if (users) {\n        let user = users.find(user => user.id === this.props.comment.user_id);\n        let userId = this.props.comment.user_id;\n\n        if (this.props.currentUser) {\n          let currentUserId = this.props.currentUser.id;\n          this.setState({\n            user: user\n          });\n          this.setState({\n            userId: userId\n          });\n          this.setState({\n            currentUserId: currentUserId\n          });\n        } else {\n          let currentUserId = {};\n          this.setState({\n            user: user\n          });\n          this.setState({\n            userId: userId\n          });\n          this.setState({\n            currentUserId: currentUserId\n          });\n        }\n      }\n    };\n\n    this.state = {\n      user: {},\n      userId: {},\n      currentUserId: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setValues();\n  }\n\n  componentWillReceiveProps() {\n    this.setValues();\n    /*     else {\r\n            let currentArticle = this.props.currentArticle \r\n            this.setState({ currentArticle: currentArticle });\r\n            this.setState({ articleComments: [] })\r\n        } */\n  }\n\n  render() {\n    let users = this.props.users;\n    let user = users.find(user => user.id === this.props.comment.user_id) || {};\n    let userId = this.state.userId;\n    let currentUserId = this.state.currentUserId;\n    let comment = this.props.comment;\n    let deleteComment = this.props.deleteComment;\n    console.log(user);\n    console.log(userId);\n    console.log(comment);\n    console.log(currentUserId);\n    console.warn(this.props.users);\n\n    if (userId === currentUserId) {\n      return React.createElement(\"div\", {\n        id: \"commentContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"articleComment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"commentContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"commenterName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        class: \"commentOwner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, user.name)), React.createElement(\"div\", {\n        class: \"commentText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, comment.text))), React.createElement(\"div\", {\n        class: \"deleteComment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"deleteCommentButton\",\n        onClick: () => {\n          deleteComment(comment.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"X\"))));\n    }\n\n    return React.createElement(\"div\", {\n      id: \"commentContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"articleComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"commentContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"commenterName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"commentOwner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, user.name)), React.createElement(\"div\", {\n      class: \"commentText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, comment.text))), React.createElement(\"div\", {\n      class: \"deleteComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/t73de/Desktop/the console/src/CommentView.js"],"names":["React","CommentView","Component","constructor","props","setValues","users","console","log","comment","user","find","id","user_id","userId","currentUser","currentUserId","setState","state","componentDidMount","componentWillReceiveProps","render","deleteComment","warn","name","text"],"mappings":"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","sourcesContent":["import React from 'react'\r\n//import './CommentView.css'\r\n\r\nexport default class CommentView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {},\r\n            userId: {},\r\n            currentUserId: {}\r\n        };\r\n    }\r\n\r\n    setValues = () => {\r\n\r\n        let users = this.props.users;\r\n        // if(!this.props.users){ users =  this.props.article || {}}\r\n        console.log(users, this.props.comment);\r\n        if(users){\r\n        let user = users.find(user => (user.id === this.props.comment.user_id));\r\n        let userId = this.props.comment.user_id\r\n        if(this.props.currentUser){\r\n    let currentUserId = this.props.currentUser.id\r\n        this.setState({ user: user });\r\n        this.setState({ userId: userId });\r\n        this.setState({ currentUserId: currentUserId });}\r\n        else{\r\n            let currentUserId = {}\r\n        this.setState({ user: user });\r\n        this.setState({ userId: userId });\r\n        this.setState({ currentUserId: currentUserId });\r\n        }\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setValues();\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n     this.setValues();\r\n\r\n    /*     else {\r\n            let currentArticle = this.props.currentArticle \r\n            this.setState({ currentArticle: currentArticle });\r\n            this.setState({ articleComments: [] })\r\n        } */\r\n    }\r\n\r\n\r\n    render() {\r\n        let users = this.props.users;\r\n        let user = users.find(user => (user.id === this.props.comment.user_id)) || {};\r\n        let userId = this.state.userId\r\n        let currentUserId = this.state.currentUserId;\r\n        let comment = this.props.comment\r\n        let deleteComment= this.props.deleteComment\r\n        console.log(user)\r\n        console.log(userId)\r\n        console.log(comment)\r\n        console.log(currentUserId)\r\n        console.warn(this.props.users);\r\n        \r\n        if (userId === currentUserId) {\r\n            return (\r\n                <div id=\"commentContainer\">\r\n                    <div id=\"articleComment\">\r\n                        <div class=\"commentContent\">\r\n                            <div class=\"commenterName\"><h1 class=\"commentOwner\">{user.name}</h1></div>\r\n                            <div class=\"commentText\"><p>{comment.text}</p></div>\r\n                        </div>\r\n                        <div class=\"deleteComment\">\r\n                            <button class=\"deleteCommentButton\" onClick={() => { deleteComment(comment.id) }}>X</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div id=\"commentContainer\">\r\n                <div id=\"articleComment\">\r\n                    <div class=\"commentContent\">\r\n                        <div class=\"commenterName\"><h1 class=\"commentOwner\">{user.name}</h1></div>\r\n                        <div class=\"commentText\"><p>{comment.text}</p></div>\r\n                    </div>\r\n                    <div class=\"deleteComment\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}