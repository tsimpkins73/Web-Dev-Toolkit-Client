{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t73de\\\\Desktop\\\\Web-Dev-Toolkit-Client\\\\src\\\\ResourceTypePreview.js\";\nimport React from 'react';\nimport './css/ResourceTypeView.css';\nimport ResourceTypeView from \"./ResourceTypeView.js\";\nimport { Link } from 'react-router-dom';\nimport { API_BASE_URL } from './config';\nexport default class ResourceTypePreview extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.getResourcesForTypes = typeID => {\n      fetch(\"\".concat(API_BASE_URL, \"/resources/byType/\").concat(typeID)).then(response => response.json()).then(typeResources => {\n        this.setState({\n          typeResources\n        });\n      });\n    };\n\n    this.state = {\n      typeResources: []\n    };\n  }\n\n  componentDidMount() {\n    let resourceType = this.props.resourceType;\n    console.log(resourceType.id);\n    this.getResourcesForTypes(resourceType.id);\n  }\n\n  render(props) {\n    console.log(this.props.resourceType);\n    let resourceType = this.props.resourceType;\n    let typeResources = this.state.typeResources;\n    console.log(resourceType);\n    console.log(typeResources);\n    return React.createElement(\"section\", {\n      id: \"resource-full-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"resource-section-headline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, resourceType.name), React.createElement(\"section\", {\n      id: \"resource-component-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, typeResources.slice(0, 4).map(function (resource) {\n      return React.createElement(ResourceTypeView, {\n        resource: resource,\n        handleFavoriteButton: () => this.props.handleFavoriteButton(resource),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    })), React.createElement(Link, {\n      to: \"/dashboard/resource/\".concat(this.props.resourceType.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"View All\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/t73de/Desktop/Web-Dev-Toolkit-Client/src/ResourceTypePreview.js"],"names":["React","ResourceTypeView","Link","API_BASE_URL","ResourceTypePreview","Component","constructor","props","context","getResourcesForTypes","typeID","fetch","then","response","json","typeResources","setState","state","componentDidMount","resourceType","console","log","id","render","name","slice","map","resource","handleFavoriteButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,4BAAP;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,UAA7B;AAEA,eAAe,MAAMC,mBAAN,SAAkCJ,KAAK,CAACK,SAAxC,CAAkD;AAC7DC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACxB,UAAMD,KAAN,EAAaC,OAAb;;AADwB,SAS5BC,oBAT4B,GASJC,MAAD,IAAY;AAC/BC,MAAAA,KAAK,WAAIR,YAAJ,+BAAqCO,MAArC,EAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAESG,aAAD,IAAmB;AAAE,aAAKC,QAAL,CAAc;AAAED,UAAAA;AAAF,SAAd;AAAmC,OAFhE;AAGD,KAbyB;;AAGxB,SAAKE,KAAL,GAAa;AACXF,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGD;;AASDG,EAAAA,iBAAiB,GAAG;AACpB,QAAIC,YAAY,GAAG,KAAKZ,KAAL,CAAWY,YAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,EAAzB;AACA,SAAKb,oBAAL,CAA0BU,YAAY,CAACG,EAAvC;AACC;;AAIHC,EAAAA,MAAM,CAAChB,KAAD,EAAQ;AACVa,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWY,YAAvB;AACA,QAAIA,YAAY,GAAG,KAAKZ,KAAL,CAAWY,YAA9B;AACA,QAAIJ,aAAa,GAAG,KAAKE,KAAL,CAAWF,aAA/B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;AACA,WACI;AAAS,MAAA,EAAE,EAAC,yBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAC,2BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCI,YAAY,CAACK,IAApD,CADJ,EAEI;AAAS,MAAA,EAAE,EAAC,8BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCT,aAAa,CAACU,KAAd,CAAoB,CAApB,EAAuB,CAAvB,EAA0BC,GAA1B,CAA8B,UAAUC,QAAV,EAAoB;AAC/C,aAAO,oBAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEA,QAA5B;AAAsC,QAAA,oBAAoB,EAAE,MAAM,KAAKpB,KAAL,CAAWqB,oBAAX,CAAgCD,QAAhC,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFA,CADD,CAFJ,EAOM,oBAAC,IAAD;AAAM,MAAA,EAAE,gCAAyB,KAAKpB,KAAL,CAAWY,YAAX,CAAwBK,IAAjD,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAjE,CAPN,CADJ;AAWH;;AAzC4D","sourcesContent":["import React from 'react'\r\nimport './css/ResourceTypeView.css'\r\nimport ResourceTypeView from \"./ResourceTypeView.js\";\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './config'\r\n\r\nexport default class ResourceTypePreview extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n    \r\n        this.state = {\r\n          typeResources: [],\r\n        };\r\n      }\r\n\r\n\r\n    getResourcesForTypes = (typeID) => {\r\n        fetch(`${API_BASE_URL}/resources/byType/${typeID}`)\r\n          .then(response => response.json())\r\n          .then((typeResources) => { this.setState({ typeResources }); });\r\n      }\r\n\r\n      componentDidMount() {\r\n      let resourceType = this.props.resourceType;\r\n      console.log(resourceType.id);\r\n      this.getResourcesForTypes(resourceType.id);\r\n      }\r\n\r\n      \r\n\r\n    render(props) {\r\n        console.log(this.props.resourceType);\r\n        let resourceType = this.props.resourceType;\r\n        let typeResources = this.state.typeResources;\r\n        console.log(resourceType);\r\n        console.log(typeResources);\r\n        return (\r\n            <section id=\"resource-full-container\">\r\n                <h1 class=\"resource-section-headline\">{resourceType.name}</h1>\r\n                <section id=\"resource-component-container\">\r\n                {typeResources.slice(0, 4).map(function (resource) {\r\n                    return <ResourceTypeView resource={resource} handleFavoriteButton={() => this.props.handleFavoriteButton(resource)}/>;\r\n                })}\r\n                  </section>\r\n                  <Link to={`/dashboard/resource/${this.props.resourceType.name}`}><button>View All</button></Link>\r\n            </section>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}