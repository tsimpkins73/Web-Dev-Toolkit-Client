{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t73de\\\\Desktop\\\\the console\\\\src\\\\ArticleList.js\";\nimport React from 'react';\nimport ArticlePreview from \"./ArticlePreview.js\";\nimport './css/ArticleList.css';\nimport { API_BASE_URL } from './config';\nexport default class ArticleList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [],\n      categoryId: null\n    };\n  }\n\n  fetchData(categoryId) {\n    fetch(\"\".concat(API_BASE_URL, \"/articles/category/\").concat(categoryId)).then(response => response.json()).then(articles => {\n      this.setState({\n        articles,\n        categoryId: categoryId\n      });\n    });\n  }\n\n  fetchSearchArticles() {\n    let searchArticles = this.props.articles.filter(article => article.text.indexOf(this.props.searchterm) >= 0);\n    console.log(searchArticles, this.props.articles, '////////');\n    this.setState({\n      articles: searchArticles\n    });\n    this.props.history.push('/dashboard');\n  }\n\n  componentDidMount() {\n    if (this.props.categoryId) {\n      this.fetchData(this.props.categoryId);\n    } else {\n      this.setState({\n        articles: this.props.articles\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.categoryId && this.state.categoryId !== this.props.categoryId) {\n      this.fetchData(this.props.categoryId);\n    } else if (this.props.searchTerm) {\n      this.fetchSearchArticles();\n    }\n  }\n\n  render() {\n    let articles = this.state.articles;\n    return React.createElement(\"section\", {\n      id: \"ArticleList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, articles.map(function (article) {\n      return React.createElement(ArticlePreview, {\n        article: article,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/t73de/Desktop/the console/src/ArticleList.js"],"names":["React","ArticlePreview","API_BASE_URL","ArticleList","Component","constructor","props","state","articles","categoryId","fetchData","fetch","then","response","json","setState","fetchSearchArticles","searchArticles","filter","article","text","indexOf","searchterm","console","log","history","push","componentDidMount","componentDidUpdate","searchTerm","render","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAO,uBAAP;AACA,SAASC,YAAT,QAA6B,UAA7B;AAEA,eAAe,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAEDC,EAAAA,SAAS,CAACD,UAAD,EAAa;AAClBE,IAAAA,KAAK,WAAIT,YAAJ,gCAAsCO,UAAtC,EAAL,CACKG,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEWJ,QAAD,IAAc;AAAE,WAAKO,QAAL,CAAc;AAAEP,QAAAA,QAAF;AAAYC,QAAAA,UAAU,EAAEA;AAAxB,OAAd;AAAsD,KAFhF;AAGH;;AAELO,EAAAA,mBAAmB,GAAG;AAClB,QAAIC,cAAc,GAAG,KAAKX,KAAL,CAAWE,QAAX,CAAoBU,MAApB,CAA2BC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqB,KAAKf,KAAL,CAAWgB,UAAhC,KAA+C,CAArF,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,cAAZ,EAA4B,KAAKX,KAAL,CAAWE,QAAvC,EAAiD,UAAjD;AACA,SAAKO,QAAL,CAAc;AAAEP,MAAAA,QAAQ,EAAES;AAAZ,KAAd;AACA,SAAKX,KAAL,CAAWmB,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACH;;AAEGC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKrB,KAAL,CAAWG,UAAf,EAA2B;AACvB,WAAKC,SAAL,CAAe,KAAKJ,KAAL,CAAWG,UAA1B;AACH,KAFD,MAGK;AACD,WAAKM,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAAvB,OAAd;AACH;AACJ;;AACDoB,EAAAA,kBAAkB,GAAG;AACjB,QAAI,KAAKtB,KAAL,CAAWG,UAAX,IAAyB,KAAKF,KAAL,CAAWE,UAAX,KAA0B,KAAKH,KAAL,CAAWG,UAAlE,EAA8E;AAC1E,WAAKC,SAAL,CAAe,KAAKJ,KAAL,CAAWG,UAA1B;AACH,KAFD,MAGK,IAAI,KAAKH,KAAL,CAAWuB,UAAf,EAA2B;AAC5B,WAAKb,mBAAL;AACH;AACJ;;AAEDc,EAAAA,MAAM,GAAG;AACL,QAAItB,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA1B;AACA,WACI;AAAS,MAAA,EAAE,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,QAAQ,CAACuB,GAAT,CAAa,UAAUZ,OAAV,EAAmB;AAC7B,aAAO,oBAAC,cAAD;AAAgB,QAAA,OAAO,EAAEA,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFA,CADL,CADJ;AAOH;;AAhDoD","sourcesContent":["import React from 'react'\r\nimport ArticlePreview from \"./ArticlePreview.js\";\r\nimport './css/ArticleList.css'\r\nimport { API_BASE_URL } from './config'\r\n\r\nexport default class ArticleList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            articles: [],\r\n            categoryId: null,\r\n        };\r\n    }\r\n\r\n    fetchData(categoryId) {\r\n        fetch(`${API_BASE_URL}/articles/category/${categoryId}`)\r\n            .then(response => response.json())\r\n            .then((articles) => { this.setState({ articles, categoryId: categoryId }); });\r\n    }\r\n\r\nfetchSearchArticles() {\r\n    let searchArticles = this.props.articles.filter(article => article.text.indexOf(this.props.searchterm) >= 0);\r\n    console.log(searchArticles, this.props.articles, '////////');\r\n    this.setState({ articles: searchArticles });\r\n    this.props.history.push('/dashboard');\r\n}    \r\n\r\n    componentDidMount() {\r\n        if (this.props.categoryId) {\r\n            this.fetchData(this.props.categoryId);\r\n        }\r\n        else {\r\n            this.setState({ articles: this.props.articles })\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.categoryId && this.state.categoryId !== this.props.categoryId) {\r\n            this.fetchData(this.props.categoryId);\r\n        }\r\n        else if (this.props.searchTerm) {\r\n            this.fetchSearchArticles();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let articles = this.state.articles;\r\n        return (\r\n            <section id=\"ArticleList\">\r\n                {articles.map(function (article) {\r\n                    return <ArticlePreview article={article} />;\r\n                })}\r\n            </section>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}