{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\t73de\\\\Desktop\\\\the console\\\\src\\\\ArticleView.js\";\nimport ArticleService from './services/article-service';\nimport React from 'react';\nimport { Link, BrowserRouter, Route } from 'react-router-dom';\nimport CommentsList from './CommentsList.js';\nimport AddCommentView from './AddCommentView.js';\nimport './css/ArticleView.css';\nimport { API_BASE_URL } from './config';\nexport default class ArticleView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addComment = comment => {\n      const articleComments = [...this.state.articleComments, comment];\n      this.setState({\n        articleComments\n      });\n    };\n\n    this.getComments = article_id => {\n      console.log(article_id);\n      fetch(\"\".concat(API_BASE_URL, \"/comments/\").concat(article_id)).then(response => response.json()).then(articleComments => {\n        this.setState({\n          articleComments\n        });\n      });\n    };\n\n    this.removeCommentFromState = commentId => {\n      let articleComments = this.state.articleComments.filter(articleComment => articleComment.id === commentId);\n      this.setState({\n        articleComments\n      });\n    };\n\n    this.deleteComment = commentId => {\n      ArticleService.deleteComment(commentId).then(this.removeCommentFromState(commentId)).catch(this.context.setError);\n    };\n\n    this.state = {\n      articleComments: []\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.article.id) {\n      this.getComments(this.props.article.id);\n    } else {\n      this.setState({\n        articleComments: []\n      });\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.article.id !== this.props.article.id) {\n      this.getComments(this.props.article.id);\n    } else if (this.props.article.id) {\n      this.getComments(this.props.article.id);\n    } else {\n      this.setState({\n        articleComments: []\n      });\n    }\n  }\n\n  render() {\n    const user = this.props.user;\n    console.log(this.props.users);\n    console.log(this.state.articleComments);\n    return React.createElement(\"div\", {\n      id: \"article-full-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      id: \"article-Full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"articleImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"previewImage\",\n      src: this.props.article.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"articleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      id: \"articleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.props.article.headline), React.createElement(\"p\", {\n      id: \"articleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.props.article.text)), React.createElement(\"div\", {\n      id: \"articleButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.props.handleFavoriteButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Favorite Button\"), React.createElement(Link, {\n      to: \"/dashboard/article/\" + this.props.article.id + \"/comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Comment Button\"))), React.createElement(Route, {\n      exact: true,\n      path: \"/dashboard/article/\".concat(this.props.article.id, \"/comment\"),\n      render: () => React.createElement(AddCommentView, {\n        addComment: this.addComment,\n        article: this.props.article,\n        articleId: this.props.article.id,\n        getComments: this.getComments,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(CommentsList, Object.assign({}, this.props, {\n      articleId: this.props.articleId,\n      users: this.props.users,\n      articleComments: this.state.articleComments,\n      currentUser: this.props.currentUser,\n      deleteComment: this.deleteComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/t73de/Desktop/the console/src/ArticleView.js"],"names":["ArticleService","React","Link","BrowserRouter","Route","CommentsList","AddCommentView","API_BASE_URL","ArticleView","Component","constructor","props","addComment","comment","articleComments","state","setState","getComments","article_id","console","log","fetch","then","response","json","removeCommentFromState","commentId","filter","articleComment","id","deleteComment","catch","context","setError","componentDidMount","article","componentWillReceiveProps","newProps","render","user","users","image","headline","text","handleFavoriteButton","articleId","currentUser"],"mappings":"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","sourcesContent":["import ArticleService from './services/article-service';\r\nimport React from 'react'\r\nimport { Link, BrowserRouter, Route } from 'react-router-dom';\r\nimport CommentsList from './CommentsList.js'\r\nimport AddCommentView from './AddCommentView.js'\r\nimport './css/ArticleView.css'\r\nimport { API_BASE_URL } from './config'\r\n\r\nexport default class ArticleView extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            articleComments:[]\r\n        };\r\n    }\r\n\r\n    addComment = comment => {\r\n        const articleComments = [\r\n          ...this.state.articleComments,\r\n          comment\r\n        ]\r\n        this.setState({ articleComments })\r\n      }\r\n\r\n    getComments = (article_id) => {\r\n        console.log(article_id);\r\n        fetch(`${API_BASE_URL}/comments/${article_id}`)\r\n        .then(response => response.json())\r\n        .then((articleComments) => { this.setState({ articleComments }); });\r\n    }\r\n\r\n    removeCommentFromState = (commentId) =>{\r\n        let articleComments = this.state.articleComments.filter(articleComment => articleComment.id === commentId)\r\n        this.setState({ articleComments })\r\n    }\r\n\r\n    deleteComment = (commentId) => {\r\n        ArticleService.deleteComment(commentId)\r\n     .then(this.removeCommentFromState(commentId))\r\n        .catch(this.context.setError)\r\n        }\r\n\r\n\r\n    componentDidMount () {\r\n        if (this.props.article.id){\r\n            \r\nthis.getComments(this.props.article.id);\r\n        }\r\n        else{\r\n            this.setState({articleComments:[]})\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){\r\n        if (newProps.article.id !== this.props.article.id) {\r\n            this.getComments(this.props.article.id);\r\n        }\r\n        else if (this.props.article.id){\r\n            \r\n            this.getComments(this.props.article.id);\r\n                    }\r\n                    else{\r\n                        this.setState({articleComments:[]})\r\n                    }\r\n    }\r\n\r\n    render() {\r\n      const user = this.props.user;\r\n      console.log(this.props.users);\r\n      console.log(this.state.articleComments);\r\n        return (\r\n            <div id=\"article-full-container\" >\r\n                <section id=\"article-Full\">\r\n                    <div id=\"articleImage\"><img id=\"previewImage\"  src={this.props.article.image} /></div>\r\n                    <div id=\"articleText\">\r\n                        <h3 id=\"articleText\">{this.props.article.headline}</h3>\r\n                        <p id=\"articleText\">{this.props.article.text}</p>\r\n                    </div>\r\n                    <div id=\"articleButtons\">\r\n                        <button onClick={this.props.handleFavoriteButton}>Favorite Button</button>\r\n                        <Link to={\"/dashboard/article/\" + this.props.article.id + \"/comment\"}><button>Comment Button</button></Link>\r\n                    </div>\r\n                        <Route exact path={`/dashboard/article/${this.props.article.id}/comment`} render={() => <AddCommentView addComment={this.addComment} article={this.props.article} articleId={this.props.article.id} getComments={this.getComments} user={user} />\r\n                        } />\r\n                    <CommentsList {...this.props} articleId={this.props.articleId} users={this.props.users} articleComments={this.state.articleComments} currentUser={this.props.currentUser} deleteComment={this.deleteComment} />\r\n                </section>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}