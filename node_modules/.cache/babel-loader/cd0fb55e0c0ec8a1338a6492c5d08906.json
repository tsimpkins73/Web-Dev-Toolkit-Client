{"ast":null,"code":"import TokenService from'./token-service';import IdleService from'./idle-service';import{API_BASE_URL}from'../config';var UserService={postUser:function postUser(user){return fetch(\"\".concat(API_BASE_URL,\"/users\"),{method:'POST',headers:{'content-type':'application/json'},body:JSON.stringify(user)}).then(function(res){return!res.ok?res.json().then(function(e){return Promise.reject(e);}):res.json();});},postLogin:function postLogin(_ref){var username=_ref.username,password=_ref.password;return fetch(\"\".concat(API_BASE_URL,\"/auth/login\"),{method:'POST',headers:{'content-type':'application/json'},body:JSON.stringify({username:username,password:password})}).then(function(res){return!res.ok?res.json().then(function(e){return Promise.reject(e);}):res.json();}).then(function(res){TokenService.saveAuthToken(res.authToken);IdleService.regiserIdleTimerResets();TokenService.queueCallbackBeforeExpiry(function(){UserService.postRefreshToken();});return res;});},postRefreshToken:function postRefreshToken(){return fetch(\"\".concat(API_BASE_URL,\"/auth/refresh\"),{method:'POST',headers:{'authorization':\"Bearer \".concat(TokenService.getAuthToken())}}).then(function(res){return!res.ok?res.json().then(function(e){return Promise.reject(e);}):res.json();}).then(function(res){TokenService.saveAuthToken(res.authToken);TokenService.queueCallbackBeforeExpiry(function(){UserService.postRefreshToken();});return res;}).catch(function(err){console.log('refresh token request error');console.error(err);});}};export default UserService;","map":{"version":3,"sources":["c:/Users/t73de/Desktop/Web-Dev-Toolkit-Client/src/services/user-service.js"],"names":["TokenService","IdleService","API_BASE_URL","UserService","postUser","user","fetch","method","headers","body","JSON","stringify","then","res","ok","json","e","Promise","reject","postLogin","username","password","saveAuthToken","authToken","regiserIdleTimerResets","queueCallbackBeforeExpiry","postRefreshToken","getAuthToken","catch","err","console","log","error"],"mappings":"AACA,MAAOA,CAAAA,YAAP,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,OAASC,YAAT,KAA6B,WAA7B,CAEA,GAAMC,CAAAA,WAAW,CAAG,CAClBC,QADkB,mBACTC,IADS,CACH,CACb,MAAOC,CAAAA,KAAK,WAAIJ,YAAJ,WAA0B,CACpCK,MAAM,CAAE,MAD4B,CAEpCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAF2B,CAKpCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAL8B,CAA1B,CAAL,CAOJO,IAPI,CAOC,SAAAC,GAAG,QACN,CAACA,GAAG,CAACC,EAAN,CACID,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,SAAAI,CAAC,QAAIC,CAAAA,OAAO,CAACC,MAAR,CAAeF,CAAf,CAAJ,EAAjB,CADJ,CAEIH,GAAG,CAACE,IAAJ,EAHG,EAPJ,CAAP,CAYD,CAdiB,CAelBI,SAfkB,yBAegB,IAAtBC,CAAAA,QAAsB,MAAtBA,QAAsB,CAAZC,QAAY,MAAZA,QAAY,CAChC,MAAOf,CAAAA,KAAK,WAAIJ,YAAJ,gBAA+B,CACzCK,MAAM,CAAE,MADiC,CAEzCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFgC,CAKzCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAES,QAAQ,CAARA,QAAF,CAAYC,QAAQ,CAARA,QAAZ,CAAf,CALmC,CAA/B,CAAL,CAOJT,IAPI,CAOC,SAAAC,GAAG,QACN,CAACA,GAAG,CAACC,EAAN,CACID,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,SAAAI,CAAC,QAAIC,CAAAA,OAAO,CAACC,MAAR,CAAeF,CAAf,CAAJ,EAAjB,CADJ,CAEIH,GAAG,CAACE,IAAJ,EAHG,EAPJ,EAYJH,IAZI,CAYC,SAAAC,GAAG,CAAI,CACXb,YAAY,CAACsB,aAAb,CAA2BT,GAAG,CAACU,SAA/B,EACAtB,WAAW,CAACuB,sBAAZ,GACAxB,YAAY,CAACyB,yBAAb,CAAuC,UAAM,CAC3CtB,WAAW,CAACuB,gBAAZ,GACD,CAFD,EAGA,MAAOb,CAAAA,GAAP,CACD,CAnBI,CAAP,CAoBD,CApCiB,CAqClBa,gBArCkB,4BAqCC,CACjB,MAAOpB,CAAAA,KAAK,WAAIJ,YAAJ,kBAAiC,CAC3CK,MAAM,CAAE,MADmC,CAE3CC,OAAO,CAAE,CACP,iCAA2BR,YAAY,CAAC2B,YAAb,EAA3B,CADO,CAFkC,CAAjC,CAAL,CAMJf,IANI,CAMC,SAAAC,GAAG,QACN,CAACA,GAAG,CAACC,EAAN,CACID,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,SAAAI,CAAC,QAAIC,CAAAA,OAAO,CAACC,MAAR,CAAeF,CAAf,CAAJ,EAAjB,CADJ,CAEIH,GAAG,CAACE,IAAJ,EAHG,EANJ,EAWJH,IAXI,CAWC,SAAAC,GAAG,CAAI,CACXb,YAAY,CAACsB,aAAb,CAA2BT,GAAG,CAACU,SAA/B,EACAvB,YAAY,CAACyB,yBAAb,CAAuC,UAAM,CAC3CtB,WAAW,CAACuB,gBAAZ,GACD,CAFD,EAGA,MAAOb,CAAAA,GAAP,CACD,CAjBI,EAkBJe,KAlBI,CAkBE,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EACAD,OAAO,CAACE,KAAR,CAAcH,GAAd,EACD,CArBI,CAAP,CAsBD,CA5DiB,CAApB,CA+DA,cAAe1B,CAAAA,WAAf","sourcesContent":["\r\nimport TokenService from './token-service'\r\nimport IdleService from './idle-service'\r\nimport { API_BASE_URL } from '../config'\r\n\r\nconst UserService = {\r\n  postUser(user) {\r\n    return fetch(`${API_BASE_URL}/users`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then(res =>\r\n        (!res.ok)\r\n          ? res.json().then(e => Promise.reject(e))\r\n          : res.json()\r\n      )\r\n  },\r\n  postLogin({ username, password }) {\r\n    return fetch(`${API_BASE_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    })\r\n      .then(res =>\r\n        (!res.ok)\r\n          ? res.json().then(e => Promise.reject(e))\r\n          : res.json()\r\n      )\r\n      .then(res => {\r\n        TokenService.saveAuthToken(res.authToken)\r\n        IdleService.regiserIdleTimerResets()\r\n        TokenService.queueCallbackBeforeExpiry(() => {\r\n          UserService.postRefreshToken()\r\n        })\r\n        return res\r\n      })\r\n  },\r\n  postRefreshToken() {\r\n    return fetch(`${API_BASE_URL}/auth/refresh`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'authorization': `Bearer ${TokenService.getAuthToken()}`,\r\n      },\r\n    })\r\n      .then(res =>\r\n        (!res.ok)\r\n          ? res.json().then(e => Promise.reject(e))\r\n          : res.json()\r\n      )\r\n      .then(res => {\r\n        TokenService.saveAuthToken(res.authToken)\r\n        TokenService.queueCallbackBeforeExpiry(() => {\r\n          UserService.postRefreshToken()\r\n        })\r\n        return res\r\n      })\r\n      .catch(err => {\r\n        console.log('refresh token request error')\r\n        console.error(err)\r\n      })\r\n  },\r\n}\r\n\r\nexport default UserService\r\n"]},"metadata":{},"sourceType":"module"}