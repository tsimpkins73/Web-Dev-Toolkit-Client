{"version":3,"sources":["services/token-service.js","services/idle-service.js","ResourceTypeView.js","LandingPage.js","services/user-service.js","LoginForm.js","SignUpForm.js","ResourceTypePreview.js","ResourceTypeList.js","ResourceTypePage.js","Dashboard.js","App.js","index.js","config.js"],"names":["_timeoutId","ResourceTypeView","handleURLButton","resourceURL","window","location","href","resource","this","props","resourceType","id","alt","headline","src","type_image","summary","onClick","bind","url","handleFavoriteButton","React","Component","LandingPage","resources","class","to","slice","map","TokenService","saveAuthToken","token","localStorage","setItem","config","TOKEN_KEY","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","makeBasicAuthToken","userName","password","btoa","parseJwt","jwt","jwtDecode","readJwtToken","_getMsUntilExpiry","payload","exp","Date","now","queueCallbackBeforeExpiry","callback","msUntilExpiry","setTimeout","clearCallbackBeforeExpiry","clearTimeout","_idleCallback","_notIdleEvents","IdleService","setIdleCallback","idleCallback","resetIdleTimer","ev","regiserIdleTimerResets","forEach","event","document","addEventListener","unRegisterIdleResets","removeEventListener","UserService","postUser","user","fetch","API_BASE_URL","method","headers","body","JSON","stringify","then","res","ok","json","e","Promise","reject","postLogin","username","authToken","postRefreshToken","catch","err","console","log","error","LoginForm","state","handleSubmitJwtAuth","preventDefault","setState","target","value","onLoginSuccess","history","push","onSubmit","className","for","type","name","SignUpForm","handleSubmit","onRegistrationSuccess","htmlFor","defaultProps","ResourceTypePreview","context","getResourcesForTypes","typeID","response","typeResources","ResourceList","types","searchterm","filter","text","indexOf","favoriteResources","searchTerm","searchResources","newProps","Dashboard","handleLogoutClick","clearUser","handleSearchSubmit","handleSearchForm","currentTarget","placeholder","exact","path","render","find","a","match","params","resourceTypeName","favorite","require","App","currentUser","article","articles","term","resourcesForTypes","users","getResources","getTypes","getUsers","parse","currentresource","currentArticle","component","handleArticleButton","ReactDOM","getElementById","module","exports","PORT","process","NODE_ENV"],"mappings":"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","file":"static/js/main.35019945.chunk.js","sourcesContent":["import jwtDecode from 'jwt-decode'\r\nimport config from '../config'\r\n\r\nlet _timeoutId\r\nconst _TEN_SECONDS_IN_MS = 10000\r\n\r\nconst TokenService = {\r\n  saveAuthToken(token) {\r\n    window.localStorage.setItem(config.TOKEN_KEY, token)\r\n  },\r\n  getAuthToken() {\r\n    return window.localStorage.getItem(config.TOKEN_KEY)\r\n  },\r\n  clearAuthToken() {\r\n    window.localStorage.removeItem(config.TOKEN_KEY)\r\n  },\r\n  hasAuthToken() {\r\n    return !!TokenService.getAuthToken()\r\n  },\r\n  makeBasicAuthToken(userName, password) {\r\n    return window.btoa(`${userName}:${password}`)\r\n  },\r\n  parseJwt(jwt) {\r\n    return jwtDecode(jwt)\r\n  },\r\n  readJwtToken() {\r\n    return TokenService.parseJwt(TokenService.getAuthToken())\r\n  },\r\n  _getMsUntilExpiry(payload) {\r\n    /*\r\n      payload is from the JWT\r\n      the `exp` value is in seconds, need to convert to ms, so * 1000\r\n      calculates the difference between now and when the JWT will expire\r\n    */\r\n    return (payload.exp * 1000) - Date.now()\r\n  },\r\n  queueCallbackBeforeExpiry(callback) {\r\n    /* get the number of ms from now until the token expires */\r\n    const msUntilExpiry = TokenService._getMsUntilExpiry(\r\n      TokenService.readJwtToken()\r\n    )\r\n    /*\r\n      queue a callback that will happen 10 seconds before the token expires\r\n      the callback is passed in as an argument so could be anything,\r\n        in this app, the callback is for calling the refresh endpoint\r\n    */\r\n    _timeoutId = setTimeout(callback, msUntilExpiry - _TEN_SECONDS_IN_MS)\r\n  },\r\n  clearCallbackBeforeExpiry() {\r\n    clearTimeout(_timeoutId)\r\n  },\r\n}\r\n\r\nexport default TokenService\r\n","\r\n/*\r\n  Idle Service\r\n\r\n  this service manages when a user has gone idle (not interacting with the page).\r\n*/\r\n\r\nlet _timeoutId\r\nlet _idleCallback = null\r\nlet _notIdleEvents = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart' ]\r\nlet _FIVE_MINUTES_IN_MS = 5 * 60 * 1000\r\n\r\nconst IdleService = {\r\n  setIdleCallback(idleCallback) {\r\n\r\n    _idleCallback = idleCallback\r\n  },\r\n\r\n  resetIdleTimer(ev) {\r\n    clearTimeout(_timeoutId)\r\n\r\n    _timeoutId = setTimeout(_idleCallback, _FIVE_MINUTES_IN_MS)\r\n  },\r\n  regiserIdleTimerResets() {\r\n    \r\n    _notIdleEvents.forEach(event =>\r\n      document.addEventListener(event, IdleService.resetIdleTimer, true)\r\n    )\r\n  },\r\n  unRegisterIdleResets() {\r\n    \r\n    clearTimeout(_timeoutId)\r\n    _notIdleEvents.forEach(event =>\r\n      document.removeEventListener(event, IdleService.resetIdleTimer, true)\r\n    )\r\n  },\r\n}\r\n\r\nexport default IdleService\r\n","\r\nimport React from 'react'\r\nimport './css/ResourceTypeView.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class ResourceTypeView extends React.Component {\r\n\r\nhandleURLButton = (resourceURL) => {\r\n        window.location.href= resourceURL;\r\n    \r\n}\r\n\r\n    render() {\r\n        let resource = this.props.resource;\r\n        let resourceType = this.props.resourceType;\r\n/*         let typeResources= this.props.typeResources\r\n        let currentResource = resources.filter(resource = resource.id == resourceID)  */\r\n        return (\r\n                <section id=\"resource-Full\">\r\n                    <div id=\"resourceImage\"><img id=\"previewImage\" alt={\"Headline Image for \" + resource.headline} src={resourceType.type_image} /></div>\r\n                    <div id=\"resourceText\">\r\n                        <h3 id=\"resourceText\">{resource.headline}</h3>\r\n                        <p id=\"resourceText\">{resource.summary}</p>\r\n                    </div>\r\n                    <div id=\"resourceButtons\">\r\n               <button onClick={this.handleURLButton.bind(this, resource.url)} >Go to Resource</button><button onClick={this.props.handleFavoriteButton}>Favorite Button</button>\r\n                    </div>\r\n                </section>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport ResourceTypeView from \"./ResourceTypeView.js\";\r\nimport './css/LandingPage.css'\r\n\r\nexport default class LandingPage extends React.Component {\r\n\r\nhandleURLButton = (resourceURL) => {\r\n        window.location.href= resourceURL;\r\n    \r\n}\r\n\r\n  render() {\r\n    let resources = this.props.resources;\r\n    return (\r\n      <section class=\"LandingContainer\">\r\n        \r\n         <div class=\"loginFormHeader\"><h1 id=\"HeaderText\">Web Dev Toolkit</h1>\r\n          <p>A Web Dev resource one-stop shop. Videos, tutorials, courses, and online utilities amassed in one convenient location.</p>\r\n          <div id=\"resourceButtons\">\r\n            <Link to=\"/sign-up\"><button>Sign Up</button></Link>\r\n            <Link to=\"/login\"><button>Login</button></Link>\r\n          </div>\r\n          </div>\r\n          <section id=\"resourceList\">\r\n            <div id=\"lp-resource-component-container\" >\r\n              {resources.slice(0,4).map(function (resource) {\r\n                 return <ResourceTypeView resource={resource} handleFavoriteButton={() => this.props.handleFavoriteButton(resource)}/>;})\r\n              }\r\n          </div>\r\n          </section>\r\n    \r\n      </section>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","\r\nimport TokenService from './token-service'\r\nimport IdleService from './idle-service'\r\nimport { API_BASE_URL } from '../config'\r\n\r\nconst UserService = {\r\n  postUser(user) {\r\n    return fetch(`${API_BASE_URL}/users`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then(res =>\r\n        (!res.ok)\r\n          ? res.json().then(e => Promise.reject(e))\r\n          : res.json()\r\n      )\r\n  },\r\n  postLogin({ username, password }) {\r\n    return fetch(`${API_BASE_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    })\r\n      .then(res =>\r\n        (!res.ok)\r\n          ? res.json().then(e => Promise.reject(e))\r\n          : res.json()\r\n      )\r\n      .then(res => {\r\n        TokenService.saveAuthToken(res.authToken)\r\n        IdleService.regiserIdleTimerResets()\r\n        TokenService.queueCallbackBeforeExpiry(() => {\r\n          UserService.postRefreshToken()\r\n        })\r\n        return res\r\n      })\r\n  },\r\n  postRefreshToken() {\r\n    return fetch(`${API_BASE_URL}/auth/refresh`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'authorization': `Bearer ${TokenService.getAuthToken()}`,\r\n      },\r\n    })\r\n      .then(res =>\r\n        (!res.ok)\r\n          ? res.json().then(e => Promise.reject(e))\r\n          : res.json()\r\n      )\r\n      .then(res => {\r\n        TokenService.saveAuthToken(res.authToken)\r\n        TokenService.queueCallbackBeforeExpiry(() => {\r\n          UserService.postRefreshToken()\r\n        })\r\n        return res\r\n      })\r\n      .catch(err => {\r\n        console.log('refresh token request error')\r\n        console.error(err)\r\n      })\r\n  },\r\n}\r\n\r\nexport default UserService\r\n","import React from 'react'\r\nimport './css/LoginForm.css'\r\nimport { Link } from 'react-router-dom';\r\nimport UserService from './services/user-service'\r\n\r\nexport default class LoginForm extends React.Component {\r\n  state = { error: null }\r\n\r\n  handleSubmitJwtAuth = ev => {\r\n    ev.preventDefault()\r\n    this.setState({ error: null })\r\n    const { username, password } = ev.target\r\n\r\n    UserService.postLogin({\r\n      username: username.value,\r\n      password: password.value,\r\n    })\r\n      .then(res => {\r\n        username.value = ''\r\n        password.value = ''\r\n        this.props.onLoginSuccess(res.username)\r\n        this.props.history.push('/dashboard')\r\n      })\r\n      .catch(res => {\r\n        this.setState({ error: res.error })\r\n\r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <section class=\"LoginContainer\">\r\n        <div class=\"LoginForm\" > \r\n        <div class=\"loginFormHeader\">\r\n          <h1 class=\"lpHeaderText\"> Welcome, Please Sign In! </h1>\r\n         <p> Guests, please login with \r\n           Username: webdev@webdevtoolkit.com and Password: Password35!</p>\r\n         </div>\r\n                    <form onSubmit={this.handleSubmitJwtAuth} className='RegistrationForm' >\r\n            <div class='formLine'>\r\n              <label for=\"username\" > Username </label>\r\n              <input type=\"text\" name=\"username\" />\r\n            </div>\r\n            <div class='formLine'>\r\n              <label for=\"password\" > Password </label>\r\n              <input type=\"password\" name=\"password\" />\r\n              <br />\r\n            </div>\r\n            <div id=\"resourceButtons\">\r\n              <button class=\"lpButton\" >Submit</button>\r\n              <Link to=\"/sign-up\"><button class=\"lpButton\" >Sign Up</button></Link>\r\n              <div>{this.state.error}</div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}","import React from 'react'\r\nimport './css/SignUpForm.css'\r\nimport { Link } from 'react-router-dom';\r\nimport UserService from './services/user-service'\r\n\r\n\r\nexport default class SignUpForm extends React.Component {\r\n    static defaultProps = {\r\n        onRegistrationSuccess: () => { }\r\n    }\r\n\r\n    state = { error: null }\r\n\r\n    handleSubmit = ev => {\r\n        ev.preventDefault()\r\n        const { name, username, password } = ev.target\r\n\r\n        this.setState({ error: null })\r\n        UserService.postUser({\r\n            username: username.value,\r\n            password: password.value,\r\n            name: name.value,\r\n        })\r\n            .then(user => {\r\n                name.value = ''\r\n                username.value = ''\r\n                password.value = ''\r\n                this.props.onRegistrationSuccess()\r\n                this.props.history.push('/dashboard')\r\n            })\r\n            .catch(res => {\r\n                this.setState({ error: res.error })\r\n            })\r\n    }\r\n\r\n     render() {\r\n        let handleSubmit=this.handleSubmit;\r\n        return (\r\n            <section className=\"LandingContainer\">\r\n                <div className=\"SignUpForm\">\r\n                <div class=\"loginFormHeader\"><h1 className=\"lpHeaderText\">Please Sign Up to Join theConsole</h1></div>\r\n                    <form className='RegistrationForm' onSubmit={handleSubmit} >\r\n                        <div className='formLine'> <label htmlFor=\"Name\">Name</label>\r\n                            <input type=\"text\" name=\"name\" />\r\n                        </div>\r\n                        <div className='formLine'> <label htmlFor=\"Username\">Email</label>\r\n                            <input type=\"email\" name=\"username\" />\r\n                        </div>\r\n                        <div className='formLine'> <label htmlFor=\"Password\">Password</label>\r\n                            <input type=\"text\" name=\"password\" />\r\n                        </div>\r\n                        <p id=\"passwordDesc\" >Password must be at least 8 characters, and\r\n    must contain one upper case, lower case, number and special character\r\n</p>\r\n<div id=\"resourceButtons\">\r\n    <button className=\"lpButton\" type=\"submit\">Submit</button>\r\n                            <Link to=\"/login\"><button className=\"lpButton\">Login</button></Link>\r\n                        </div>\r\n\r\n                    </form>\r\n                    <div>{this.state.error}</div>\r\n                </ div>\r\n            </ section>\r\n        )};\r\n}","import React from 'react'\r\nimport './css/ResourceTypeView.css'\r\nimport ResourceTypeView from \"./ResourceTypeView.js\";\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './config'\r\n\r\nexport default class ResourceTypePreview extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n    \r\n        this.state = {\r\n          typeResources: [],\r\n        };\r\n      }\r\n\r\n\r\n    getResourcesForTypes = (typeID) => {\r\n        fetch(`${API_BASE_URL}/resources/byType/${typeID}`)\r\n          .then(response => response.json())\r\n          .then((typeResources) => { this.setState({ typeResources }); });\r\n      }\r\n\r\n      componentDidMount() {\r\n      let resourceType = this.props.resourceType;\r\n      this.getResourcesForTypes(resourceType.id);\r\n      }\r\n\r\n      \r\n\r\n    render(props) {\r\n        let resourceType = this.props.resourceType;\r\n        let typeResources = this.state.typeResources;\r\n        return (\r\n            <section id=\"resource-full-container\">\r\n                <h1 class=\"resource-section-headline\">{resourceType.name}</h1>\r\n                <section id=\"resource-component-container\">\r\n                {typeResources.slice(0, 4).map(function (resource) {\r\n                    return <ResourceTypeView resource={resource} handleFavoriteButton={() => this.props.handleFavoriteButton(resource)} resourceType={resourceType} />;\r\n                })}\r\n                  </section>\r\n                  <Link to={`/dashboard/resource/${this.props.resourceType.name}`}><button>View All</button></Link>\r\n            </section>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport ResourceTypePreview from \"./ResourceTypePreview.js\";\r\nimport './css/ResourceTypeList.css'\r\n\r\nexport default class ResourceList extends React.Component {\r\n\r\n\r\n    render() {\r\n        let types = this.props.types\r\n        let resources= this.props.resources\r\n        if (this.props.searchterm) {\r\n            resources = this.props.resources.filter(resource => resource.text.indexOf(this.props.searchterm) >= 0)\r\n        }\r\n        return (\r\n            <section id=\"resourceList\">\r\n                {types.map(function (resourceType) {\r\n                    return <ResourceTypePreview resourceType={resourceType} resources={resources} />;\r\n                })}\r\n            </section>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport './css/ResourceTypeView.css'\r\nimport ResourceTypeView from \"./ResourceTypeView.js\";\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL } from './config'\r\n\r\nexport default class ResourceTypePreview extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            typeResources: [],\r\n            resourceType:''\r\n        };\r\n    }\r\n\r\n\r\n    getResourcesForTypes = (typeID) => {\r\n        fetch(`${API_BASE_URL}/resources/byType/${typeID}`)\r\n            .then(response => response.json())\r\n            .then((typeResources) => { this.setState({ typeResources }); });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let resourceType = this.props.resourceType;\r\n        if (this.props.favoriteResources) {\r\n            this.setState({ typeResources: this.props.favoriteResources,\r\n            resourceType:\"Favorites\" })\r\n        }\r\n        if (this.props.searchTerm) {\r\n            this.setState({ typeResources: this.props.searchResources,\r\n            resourceType:\"Results\"})\r\n        }\r\n        else {\r\n            this.getResourcesForTypes(resourceType.id);\r\n            this.setState({ resourceType: this.props.resourceType.name })\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n /*        this.props.clearSpecialResources(); */\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n       \r\n        if(newProps.favoriteResources){\r\n            this.setState({ typeResources: this.props.favoriteResources })\r\n        }else if(newProps.searchResources) {\r\n            if(newProps.searchResources !== this.state.typeResources) {\r\n                this.setState({ typeResources: newProps.searchResources })\r\n            }\r\n            else{\r\n            this.setState({ typeResources: this.props.searchResources })\r\n        }\r\n    }\r\n        else if(newProps.resourceType !== this.props.resourceType){\r\n            this.getResourcesForTypes(newProps.resourceType.id);\r\n        }else if(this.props.resourceType){\r\n            this.getResourcesForTypes(this.props.resourceType.id);\r\n        }\r\n        else{\r\n            this.setState({ typeResources: []})\r\n        }\r\n\r\n    }\r\n\r\n    render(props) {\r\n        let resourceType = this.state.resourceType;\r\n        let typeResources = this.state.typeResources;\r\n        return (\r\n            <section id=\"resource-full-container\">\r\n                <h1 class=\"resource-section-headline\">{resourceType}</h1>\r\n                <section id=\"resource-component-container\">\r\n                    {typeResources.map(function (resource) {\r\n                        return <ResourceTypeView resource={resource} handleFavoriteButton={() => this.props.handleFavoriteButton(resource)} />;\r\n                    })}\r\n                </section>\r\n            </section>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport ResourceTypeList from './ResourceTypeList.js'\r\nimport ResourceTypePage from './ResourceTypePage.js'\r\nimport './css/Dashboard.css'\r\nimport TokenService from './services/token-service'\r\n\r\nexport default class Dashboard extends React.Component {\r\n    handleLogoutClick = () => {\r\n        TokenService.clearAuthToken();\r\n        this.props.clearUser();\r\n    }\r\n    handleSearchSubmit = (e) => {\r\n        this.props.handleSearchForm(e)\r\n        const url = '/dashboard/search/' + e.currentTarget.searchTerm.value;\r\n        this.props.history.push(url);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (<section id=\"dashboardContainer\">\r\n            <section id=\"Header\"><h1 id=\"dashboardHeaderText\">Web Dev Toolkit</h1>\r\n            <section id=\"navbar\"><Link id='navLink' onClick={this.handleLogoutClick} to='/'>\r\n                Logout\r\n        </Link>\r\n                <Link id='navLink' to='/dashboard'>\r\n                    Home\r\n        </Link>\r\n                <form onSubmit={this.handleSearchSubmit}>\r\n                    <input type=\"text\" className=\"input\" name=\"searchTerm\" placeholder=\"Search...\" />\r\n                    <button className=\"searchButton\" type=\"submit\">Search</button>\r\n                </form>\r\n                <Link id='navLink' to='/dashboard/favorites'>Favorites</ Link></section>\r\n            </section>\r\n            <section id=\"mainContentContainer\">\r\n                <Route exact path={'/dashboard'} render={(props) => { return <ResourceTypeList resources={this.props.resources} types={this.props.types} searchTerm={this.props.searchterm} /> }} />\r\n                <Route path={'/dashboard/resource/:type'} render={(props) => {\r\n                    let types = this.props.types;\r\n                    let resourceType = (types.find(a => a.name === props.match.params.type));\r\n                    return <ResourceTypePage resourceType={resourceType} resourceTypeName={resourceType.name} handleFavoriteButton={this.props.handleFavoriteButton} />\r\n                }} />\r\n                <Route path={'/dashboard/search/:searchterm'} render={(props) => {\r\n                    const searchTerm = props.match.params.searchterm\r\n                    let searchResources = (this.props.resources.filter(resource => resource.summary.indexOf(props.match.params.searchterm) >= 0 || resource.headline.indexOf(props.match.params.searchterm) >= 0));\r\n                    return <ResourceTypePage searchResources={searchResources} searchTerm={searchTerm} resourceTypeName={searchTerm} handleFavoriteButton={this.props.handleFavoriteButton} />\r\n                }} />\r\n                <Route path={'/dashboard/favorites'} render={(props) => {\r\n                    let resourceType = {name: \"Favorites\"};\r\n                    let favoriteResources = (this.props.resources.filter(resource => resource.favorite));\r\n                    return <ResourceTypePage favoriteResources={favoriteResources} resourceType={resourceType} handleFavoriteButton={this.props.handleFavoriteButton} />\r\n                }} />\r\n            </section>\r\n        </section>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport LandingPage from './LandingPage.js'\r\nimport LoginForm from './LoginForm.js'\r\nimport SignUpForm from './SignUpForm.js'\r\nimport Dashboard from './Dashboard.js'\r\nimport { API_BASE_URL } from './config'\r\nrequire('dotenv').config();\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      resources: [],\r\n      types: [],\r\n      resourcesForTypes: [],\r\n      typeResources: [],\r\n      searchterm: '',\r\n      searchResources: [],\r\n      currentUser: {},\r\n      users: [],\r\n    };\r\n  }\r\n\r\n\r\n\r\nclearUser = () => {\r\n  this.setState({currentUser:{}});\r\n  localStorage[\"user\"]= 'null';\r\n}\r\n\r\n\r\n  handleFavoriteButton = (article) => {\r\n    article.favorite = !article.favorite;\r\n    this.setState({\r\n      articles: this.state.articles\r\n    });\r\n  }\r\n\r\n  handleSearchForm = (event) => {\r\n    event.preventDefault();\r\n    const term = event.currentTarget.searchTerm.value;\r\n    this.setState({\r\n      searchterm: term\r\n    });\r\n  }\r\n  \r\n\r\n  onLoginSuccess = (username) => {\r\n    fetch(`${API_BASE_URL}/users/${username}`)\r\n      .then(response => response.json())\r\n      .then((currentUser) => { \r\n        this.setState({ currentUser }); \r\n        localStorage[\"user\"]= JSON.stringify(currentUser)\r\n     });\r\n  }\r\n\r\n/*   getResourcesForTypes = () => {\r\n    fetch(`${API_BASE_URL}/resourcesTypes/`)\r\n      .then(response => response.json())\r\n      .then((typeResources) => { this.setState({ typeResources }); });\r\n  } */\r\n\r\n  getResources() {\r\n    fetch(`${API_BASE_URL}/resources`)\r\n      .then(response => response.json())\r\n      .then((resources) => { this.setState({ resources }); });\r\n  }\r\n    getTypes() {\r\n       fetch(`${API_BASE_URL}/types`)\r\n      .then(response => response.json())\r\n      .then((types) => { this.setState({ types }); });\r\n  }\r\n\r\n  getUsers() {\r\n    fetch(`${API_BASE_URL}/users`)\r\n   .then(response => response.json())\r\n   .then((users) => { this.setState({ users }); });\r\n}\r\n\r\n  componentDidMount() {\r\n    this.getResources();\r\n    this.getTypes();\r\n    this.getUsers();\r\n    if(localStorage[\"user\"]){\r\n      const user = JSON.parse(localStorage[\"user\"]);\r\n      this.setState({currentUser: user});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <main className='App'>\r\n      <BrowserRouter>\r\n        <Route exact path={'/'} render={(props) => <LandingPage {...props} resources={this.state.resources}  handleFavoriteButton={this.handleFavoriteButton} clearUser={this.clearUser} currentresource={this.state.currentArticle} />} />\r\n        <Route path={'/login'} render={(props) => <LoginForm onLoginSuccess={this.onLoginSuccess} {...props} />} />\r\n          <Route path={'/sign-up'} component={SignUpForm} />\r\n        <Route path={'/dashboard'} render={(props) => <Dashboard {...props} handleArticleButton={this.handleArticleButton} users={this.state.users} resources={this.state.resources} types={this.state.types} searchterm={this.state.searchterm} currentUser={this.state.currentUser} types={this.state.types} handleSearchForm={this.handleSearchForm} handleFavoriteButton={this.handleFavoriteButton} clearUser={this.clearUser} currentresource={this.state.currentArticle} />} />\r\n      </BrowserRouter>\r\n    </main>\r\n  );\r\n}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './css/index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = {\r\n    PORT: process.env.PORT || 8000,\r\n    NODE_ENV: process.env.NODE_ENV || 'development',\r\n    API_BASE_URL: process.env.REACT_APP_API_BASE_URL || 'https://web-dev-toolkit-api.herokuapp.com/api',\r\n    TOKEN_KEY: 'WebDevToolkit-auth-token',\r\n  }"],"sourceRoot":""}